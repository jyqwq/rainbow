import{_ as i,c as a,f as n,o as l}from"./app-LYC0rH-0.js";const h={};function k(t,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h2 id="dart语言基础" tabindex="-1"><a class="header-anchor" href="#dart语言基础"><span>Dart语言基础</span></a></h2><h3 id="类型变量" tabindex="-1"><a class="header-anchor" href="#类型变量"><span>类型变量</span></a></h3><ul><li>在Dart中，所有类型都是对象类型，都继承自顶层类型Object，因此一切变量都是对象，数字、布尔值、函数和null也概莫能外；</li><li>未初始化变量的值都是null；</li><li>为变量指定类型，这样编辑器和编译器都能更好地理解你的意图。</li></ul><h3 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h3><p><strong>Dart认为重载会导致混乱，因此从设计之初就不支持重载，而是提供了可选命名参数和可选参数</strong>。</p><p>具体方式是，在声明函数时：</p><ul><li>给参数增加{}，以paramName: value的方式指定调用参数，也就是可选命名参数；</li><li>给参数增加[]，则意味着这些参数是可以忽略的，也就是可选参数。</li></ul><h3 id="类" tabindex="-1"><a class="header-anchor" href="#类"><span>类</span></a></h3><p>Dart中并没有public、protected、private这些关键字，我们只要在声明变量与方法时，在前面加上“_”即可作为private方法使用。如果不加“_”，则默认为public。不过，<strong>“_”的限制范围并不是类访问级别的，而是库访问级别</strong>。</p><h3 id="复用" tabindex="-1"><a class="header-anchor" href="#复用"><span>复用</span></a></h3><p>在面向对象的编程语言中，将其他类的变量与方法纳入本类中进行复用的方式一般有两种：<strong>继承父类和接口实现</strong>。当然，在Dart也不例外。</p><p>在Dart中，你可以对同一个父类进行继承或接口实现：</p><ul><li>继承父类意味着，子类由父类派生，会自动获取父类的成员变量和方法实现，子类可以根据需要覆写构造函数及父类方法；</li><li>接口实现则意味着，子类获取到的仅仅是接口的成员变量符号和方法符号，需要重新实现成员变量，以及方法的声明和初始化，否则编译器会报错。</li></ul><p><strong>除了继承和接口实现之外，Dart还提供了另一种机制来实现类的复用，即“混入”（Mixin）</strong>。混入鼓励代码重用，可以被视为具有实现方法的接口。这样一来，不仅可以解决Dart缺少对多重继承的支持问题，还能够避免由于多重继承可能导致的歧义（菱形问题）。</p><blockquote><p>备注：继承歧义，也叫菱形问题，是支持多继承的编程语言中一个相当棘手的问题。当B类和C类继承自A类，而D类继承自B类和C类时会产生歧义。如果A中有一个方法在B和C中已经覆写，而D没有覆写它，那么D继承的方法的版本是B类，还是C类的呢？</p></blockquote><p><strong>要使用混入，只需要with关键字即可。</strong></p><h3 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符"><span>运算符</span></a></h3><p>Dart和绝大部分编程语言的运算符一样，所以你可以用熟悉的方式去执行程序代码运算。不过，<strong>Dart多了几个额外的运算符，用于简化处理变量实例缺失（即null）的情况</strong>。</p><ul><li>**?.**运算符：假设Point类有printInfo()方法，p是Point的一个可能为null的实例。那么，p调用成员方法的安全代码，可以简化为<code>p?.printInfo() </code>，表示p为null的时候跳过，避免抛出异常。</li><li><strong>??=</strong> 运算符：如果a为null，则给a赋值value，否则跳过。这种用默认值兜底的赋值语句在Dart中我们可以用<code>a ??= value</code>表示。</li><li>**??**运算符：如果a不为null，返回a的值，否则返回b。在Java或者C++中，我们需要通过三元表达式<code>(a != null)? a : b</code>来实现这种情况。而在Dart中，这类代码可以简化为<code>a ?? b</code>。</li></ul><p><strong>在Dart中，一切都是对象，就连运算符也是对象成员函数的一部分。</strong></p><h3 id="购物车demo" tabindex="-1"><a class="header-anchor" href="#购物车demo"><span>购物车DEMO</span></a></h3><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 首先，Item类与ShoppingCart类中都有一个name属性，在Item中表示商品名称，在ShoppingCart中则表示用户名；</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 然后，Item类中有一个price属性，ShoppingCart中有一个price方法，它们都表示当前的价格。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 考虑到name属性与price属性（方法）的名称与类型完全一致，在信息表达上的作用也几乎一致，因此我可以在这两个类的基础上，再抽象出一个新的基类Meta，用于存放price属性与name属性。</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Meta</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  double</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> price</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Meta</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">price)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 关于购物车信息的打印，我们是通过在main函数中获取到购物车对象的信息后，使用全局的print函数打印的，我们希望把打印信息的行为封装到ShoppingCart类中。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 而对于打印信息的行为而言，这是一个非常通用的功能，不止ShoppingCart类需要，Item对象也可能需要。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 因此，我们需要把打印信息的能力单独封装成一个单独的类PrintHelper。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 但，ShoppingCart类本身已经继承自Meta类，考虑到Dart并不支持多继承，所以这里使用“混入”（Mixin）。</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">mixin</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> PrintHelper</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  printInfo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getInfo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  getInfo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 定义商品Item类</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Item</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Meta</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> with</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> PrintHelper</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  num</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Item</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">price</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">number)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 重载了+运算符，合并商品为套餐商品，就是将两个实例的name和price做+运算，得到一个新的实例，新实例的价格就是累加的结果</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Item</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> operator</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Item</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> item) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Item</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(name </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> item</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> price </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> number </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> item</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">price</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  getInfo () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    -------------------------</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    商品名称: </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$name</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    商品价格: </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$price</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    商品数量: </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$number</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    -------------------------</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  &#39;&#39;&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 定义购物车类</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ShoppingCart</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Meta</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> with</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> PrintHelper</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  DateTime</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> date</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> code</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  List</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Item</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; bookings </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> []</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 考虑到在ShoppingCart类中，price属性仅用做计算购物车中商品的价格（而不是像Item类那样用于数据存取），因此在继承了Meta类后，改写了ShoppingCart类中price属性的get方法</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 把迭代求和改写为归纳合并</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // value + element中的运算符已被Item类重载，所以对象之间可以直接使用运算</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  double</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> get</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> price </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> bookings</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">reduce</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> element) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> value </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> element)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">price</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  num</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> get</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> number </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> bookings</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">length</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  String</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> get</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> goodsInfo </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> bookings</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">map</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((item) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> item</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getInfo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">join</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 提供给调用者更明确的初始化方法调用方式，让调用者以“参数名:参数键值对”的方式指定调用参数，让调用者明确传递的初始化参数的意义。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 对一个购物车对象来说，一定会有一个有用户名，但不一定有优惠码的用户。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 因此，对于购物车对象的初始化，我们还需要提供一个不含优惠码的初始化方法，并且需要确定多个初始化方法与父类的初始化方法之间的正确调用顺序。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 默认初始化方法，转发到withCode里</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  ShoppingCart</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({name}) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">withCode</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(name</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> code</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // withCode初始化方法，使用语法糖和初始化列表进行赋值，并调用父类初始化方法</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  ShoppingCart</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">withCode</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">code}) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> date </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> DateTime</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">now</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> super</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  getInfo () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">购物车信息:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-----------------------------</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  用户名: </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$name</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  优惠码: </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">\${code == </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">?</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;没有&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">:code}</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  商品详情:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$goodsInfo</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  商品总数: </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$number</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  总价: </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$price</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  Date: </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$date</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-----------------------------</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;&#39;&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 使用级联运算符“..”，在同一个对象上连续调用多个函数以及访问成员变量。使用级联操作符可以避免创建临时变量，让代码看起来更流畅。</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  ShoppingCart</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">withCode</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(name</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;张三&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> code</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;123456&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    ..</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">bookings </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Item</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;苹果&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 10.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Item</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;鸭梨&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 20.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)]</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    ..</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">printInfo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  ShoppingCart</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(name</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;李四&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    ..</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">bookings </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Item</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;香蕉&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 15.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Item</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;西瓜&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 40.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)]</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    ..</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">printInfo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="flutter基础" tabindex="-1"><a class="header-anchor" href="#flutter基础"><span>Flutter基础</span></a></h2><h3 id="widget" tabindex="-1"><a class="header-anchor" href="#widget"><span>Widget</span></a></h3><p><strong>Flutter的核心设计思想便是“一切皆Widget”</strong>。</p><p>Widget是Flutter世界里对视图的一种结构化描述，你可以把它看作是前端中的“控件”或“组件”。Widget是控件实现的基本逻辑单位，里面存储的是有关视图渲染的配置信息，包括布局、渲染属性、事件响应信息等。</p><p>Flutter将Widget设计成不可变的，所以当视图渲染的配置信息发生变化时，Flutter会选择重建Widget树的方式进行数据更新，以数据驱动UI构建的方式简单高效。</p><h4 id="element" tabindex="-1"><a class="header-anchor" href="#element"><span>Element</span></a></h4><p>Element是Widget的一个实例化对象，它承载了视图构建的上下文数据，是连接结构化的配置信息到完成最终渲染的桥梁。</p><p>Flutter渲染过程，可以分为这么三步：</p><ul><li>首先，通过Widget树生成对应的Element树；</li><li>然后，创建相应的RenderObject并关联到<code>Element.renderObject</code>属性上；</li><li>最后，构建成RenderObject树，以完成最终的渲染。</li></ul><p>因为Widget具有不可变性，但Element却是可变的。实际上，Element树这一层将Widget树的变化（类似React 虚拟DOM diff）做了抽象，可以只将真正需要修改的部分同步到真实的RenderObject树中，最大程度降低对真实渲染视图的修改，提高渲染效率，而不是销毁整个渲染视图树重建。</p><p>这，就是Element树存在的意义。</p><h4 id="renderobject" tabindex="-1"><a class="header-anchor" href="#renderobject"><span>RenderObject</span></a></h4><p>Flutter通过控件树（Widget树）中的每个控件（Widget）创建不同类型的渲染对象，组成渲染对象树。</p><p>而渲染对象树在Flutter的展示过程分为四个阶段，即布局、绘制、合成和渲染。 其中，布局和绘制在RenderObject中完成，Flutter采用深度优先机制遍历渲染对象树，确定树中各个对象的位置和尺寸，并把它们绘制到不同的图层上。绘制完毕后，合成和渲染的工作则交给Skia搞定。</p><p>Flutter通过引入Widget、Element与RenderObject这三个概念，把原本从视图数据到视图渲染的复杂构建过程拆分得更简单、直接，在易于集中治理的同时，保证了较高的渲染效率。</p><h3 id="widget中的state" tabindex="-1"><a class="header-anchor" href="#widget中的state"><span>Widget中的State</span></a></h3><p>Widget有StatelessWidget和StatefulWidget两种类型。StatefulWidget应对有交互、需要动态变化视觉效果的场景，而StatelessWidget则用于处理静态的、无状态的视图展示。<strong>Flutter的视图开发是声明式的，其核心设计思想就是将视图和数据分离，这与React的设计思路完全一致</strong>。<strong>命令式编程强调精确控制过程细节；而声明式编程强调通过意图输出结果整体。</strong></p><p><strong>当你所要构建的用户界面不随任何状态信息的变化而变化时，需要选择使用StatelessWidget，反之则选用StatefulWidget。</strong></p><h4 id="statelesswidget" tabindex="-1"><a class="header-anchor" href="#statelesswidget"><span>StatelessWidget</span></a></h4><p>在Flutter中，Widget采用由父到子、自顶向下的方式进行构建，父Widget控制着子Widget的显示样式，其样式配置由父Widget在构建时提供。</p><p>用这种方式构建出的Widget，有些（比如Text、Container、Row、Column等）在创建时，除了这些配置参数之外不依赖于任何其他信息，换句话说，它们一旦创建成功就不再关心、也不响应任何数据变化进行重绘。在Flutter中，<strong>这样的Widget被称为StatelessWidget（无状态组件）</strong>。</p><h4 id="statefulwidget" tabindex="-1"><a class="header-anchor" href="#statefulwidget"><span>StatefulWidget</span></a></h4><p>与StatelessWidget相对应的，有一些Widget（比如Image、Checkbox）的展示，除了父Widget初始化时传入的静态配置之外，还需要处理用户的交互（比如，用户点击按钮）或其内部数据的变化（比如，网络数据回包），并体现在UI上。</p><p>换句话说，这些Widget创建完成后，还需要关心和响应数据变化来进行重绘。在Flutter中，<strong>这一类Widget被称为StatefulWidget（有状态组件）</strong>。</p><p>Widget是不可变的，发生变化时需要销毁重建，所以谈不上状态。StatefulWidget是以State类代理Widget构建的设计方式实现的。</p><h4 id="合理选择state" tabindex="-1"><a class="header-anchor" href="#合理选择state"><span>合理选择State</span></a></h4><p>因为Widget是不可变的，更新则意味着销毁+重建（build）。StatelessWidget是静态的，一旦创建则无需更新；而对于StatefulWidget来说，在State类中调用setState方法更新数据，会触发视图的销毁和重建，也将间接地触发其每个子Widget的销毁和重建。</p><p><strong>如果我们的根布局是一个StatefulWidget，在其State中每调用一次更新UI，都将是一整个页面所有Widget的销毁和重建</strong>。</p><p>虽然Flutter内部通过Element层可以最大程度地降低对真实渲染视图的修改，提高渲染效率，而不是销毁整个RenderObject树重建。但，大量Widget对象的销毁重建是无法避免的。如果某个子Widget的重建涉及到一些耗时操作，那页面的渲染性能将会急剧下降。</p><p>因此，<strong>正确评估你的视图展示需求，避免无谓的StatefulWidget使用，是提高Flutter应用渲染性能最简单也是最直接的手段</strong>。</p><h3 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期"><span>生命周期</span></a></h3><h4 id="state生命周期" tabindex="-1"><a class="header-anchor" href="#state生命周期"><span>State生命周期</span></a></h4><p>State的生命周期可以分为3个阶段：创建（插入视图树）、更新（在视图树中存在）、销毁（从视图树中移除）。</p><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/bba88ebb44b7fdd6735f3ddb41106784.png" alt="aacfcfdb80038874251aa8ad93930abc"></p><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/aacfcfdb80038874251aa8ad93930abc.png" alt="aacfcfdb80038874251aa8ad93930abc"></p><h4 id="app生命周期" tabindex="-1"><a class="header-anchor" href="#app生命周期"><span>App生命周期</span></a></h4><p>视图的生命周期，定义了视图的加载到构建的全过程，其回调机制能够确保我们可以根据视图的状态选择合适的时机做恰当的事情。而App的生命周期，则定义了App从启动到退出的全过程。</p><p>Flutter中，我们可以利用<strong>WidgetsBindingObserver</strong>类来实现。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">abstract</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> WidgetsBindingObserver</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //页面pop</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">bool</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">didPopRoute</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">bool</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">value</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">false</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //页面push</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">bool</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">didPushRoute</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> route) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">bool</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">value</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">false</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //系统窗口相关改变回调，如旋转</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didChangeMetrics</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() { }</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //文本缩放系数变化</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didChangeTextScaleFactor</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() { }</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //系统亮度变化</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didChangePlatformBrightness</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() { }</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //本地化语言变化</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didChangeLocales</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">List</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Locale</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; locale) { }</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //App生命周期变化</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didChangeAppLifecycleState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">AppLifecycleState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> state) { }</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //内存警告回调</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didHaveMemoryPressure</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() { }</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //Accessibility相关特性回调</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didChangeAccessibilityFeatures</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {}</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其他的回调相对简单，可以参考<a href="https://api.flutter.dev/flutter/widgets/WidgetsBindingObserver-class.html" target="_blank" rel="noopener noreferrer">官方文档</a>。</p><p>在下面的代码中，我们在initState时注册了监听器，在didChangeAppLifecycleState回调方法中打印了当前的App状态，最后在dispose时把监听器移除：</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> _MyHomePageState</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">MyHomePage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt;  </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">with</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> WidgetsBindingObserver</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">{</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ...</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @mustCallSuper</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    WidgetsBinding</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">instance</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addObserver</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//注册监听器</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @mustCallSuper</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(){</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    WidgetsBinding</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">instance</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">removeObserver</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//移除监听器</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didChangeAppLifecycleState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">AppLifecycleState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> state) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">async</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$state</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // resumed：可见的，并能响应用户的输入。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // inactive：处在不活动状态，无法处理用户响应。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // paused：不可见并不能响应用户的输入，但是在后台继续活动中。</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (state </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppLifecycleState</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">resumed) {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">      //do sth</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们试着切换一下前、后台，观察控制台输出的App状态，可以发现：</p><ul><li>从后台切入前台，控制台打印的App生命周期变化如下: <code>AppLifecycleState.paused</code>-&gt;<code>AppLifecycleState.inactive</code>-&gt;<code>AppLifecycleState.resumed</code>；</li><li>从前台退回后台，控制台打印的App生命周期变化则变成了：<code>AppLifecycleState.resumed</code>-&gt;<code>AppLifecycleState.inactive</code>-&gt;<code>AppLifecycleState.paused</code>。</li></ul><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/2880ffdbe3c5df3552c0b22c34157ae6.png" alt="2880ffdbe3c5df3552c0b22c34157ae6"></p><h4 id="帧绘制回调" tabindex="-1"><a class="header-anchor" href="#帧绘制回调"><span>帧绘制回调</span></a></h4><p>除了需要监听App的生命周期回调做相应的处理之外，有时候我们还需要在组件渲染之后做一些与显示安全相关的操作。<strong>在Flutter中实现同样的需求会更简单</strong>：依然使用万能的WidgetsBinding来实现。</p><p>WidgetsBinding提供了单次Frame绘制回调，以及实时Frame绘制回调两种机制，来分别满足不同的需求：</p><ul><li>单次Frame绘制回调，通过addPostFrameCallback实现。它会在当前Frame绘制完成后进行进行回调，并且只会回调一次，如果要再次监听则需要再设置一次。</li></ul><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">WidgetsBinding</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">instance</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addPostFrameCallback</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((_){</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;单次Frame绘制回调&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//只回调一次</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  })</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>实时Frame绘制回调，则通过addPersistentFrameCallback实现。这个函数会在每次绘制Frame结束后进行回调，可以用做FPS监测。</li></ul><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">WidgetsBinding</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">instance</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addPersistentFrameCallback</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((_){</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;实时Frame绘制回调&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//每帧都回调</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="生命周期回调demo" tabindex="-1"><a class="header-anchor" href="#生命周期回调demo"><span>生命周期回调DEMO</span></a></h4><p><strong>main.dart</strong></p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;./page1.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> runApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Flutter Demo&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        theme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          primarySwatch</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">blue</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        home</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Page1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(key</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Key</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;1&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>page1.dart</strong></p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;./page2.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Page1</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatefulWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Page1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">required</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Key</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key}) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> super</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(key</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Page1State</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> createState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Page1State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Page1State</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Page1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">with</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> WidgetsBindingObserver</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //当Widget第一次插入到Widget树时会被调用。对于每一个State对象，Flutter只会调用该回调一次</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;page1 initState......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    WidgetsBinding</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">instance</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addObserver</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//注册监听器</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    WidgetsBinding</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">instance</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addPostFrameCallback</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((_){</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">      print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;单次Frame绘制回调&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//只回调一次</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    })</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    WidgetsBinding</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">instance</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addPersistentFrameCallback</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((_){</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">      print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;实时Frame绘制回调&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//每帧都回调</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    })</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> setState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(fn) {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(fn)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;page1 setState......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  /*</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  *初始化时，在initState之后立刻调用</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  *当State的依赖关系发生变化时，会触发此接口被调用</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  */</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didChangeDependencies</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">didChangeDependencies</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;page1 didChangeDependencies......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //绘制界面</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;page1 build......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Lifecycle demo&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">            ElevatedButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;打开/关闭新页面查看状态变化&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Navigator</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialPageRoute</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(builder</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (context) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Parent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(key</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Key</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;1&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          ]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //状态改变的时候会调用该方法,比如父类调用了setState</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didUpdateWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Page1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> oldWidget) {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">didUpdateWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(oldWidget)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;page1 didUpdateWidget......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //当State对象从树中被移除时，会调用此回调</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> deactivate</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">deactivate</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;page1 deactivate......&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //当State对象从树中被永久移除时调用；通常在此回调中释放资源</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;page1 dispose......&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    WidgetsBinding</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">instance</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">removeObserver</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//移除监听器</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //监听App生命周期回调</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didChangeAppLifecycleState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">AppLifecycleState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> state) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">async</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$state</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (state </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppLifecycleState</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">resumed) {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">      //do sth</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>page2.dart</strong></p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Parent</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatefulWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Parent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">required</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Key</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key}) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> super</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(key</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  ParentState</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> createState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ParentState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ParentState</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Parent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  int</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> _counter </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //当Widget第一次插入到Widget树时会被调用。对于每一个State对象，Flutter只会调用该回调一次</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;page2 parent initState......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> setState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(fn) {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(fn)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;page2 parent setState......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  /*</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  *初始化时，在initState之后立刻调用</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  *当State的依赖关系发生变化时，会触发此接口被调用</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  */</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didChangeDependencies</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">didChangeDependencies</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;page2 parent didChangeDependencies......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //绘制界面</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;page2 parent build......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;setState demo&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ElevatedButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            ///点击事件</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">              setState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                _counter</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              })</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            }</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Child</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(count</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">_counter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Key</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;1&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          ))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //状态改变的时候会调用该方法,比如父类调用了setState</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didUpdateWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Parent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> oldWidget) {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">didUpdateWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(oldWidget)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;page2 parent didUpdateWidget......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //当State对象从树中被移除时，会调用此回调</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> deactivate</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">deactivate</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;page2 parent deactivate......&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //当State对象从树中被永久移除时调用；通常在此回调中释放资源</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;page2 parent dispose......&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Child</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatefulWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  final</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> int</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> count</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Child</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">required</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Key</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">count}) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> super</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(key</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  ChildState</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> createState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ChildState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ChildState</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Child</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //绘制界面</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;child build......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;点击按钮查看状态变化 count: </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">\${widget.count}</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //当Widget第一次插入到Widget树时会被调用。对于每一个State对象，Flutter只会调用该回调一次</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;page2 child initState......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  /*</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  *初始化时，在initState之后立刻调用</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  *当State的依赖关系发生变化时，会触发此接口被调用</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  */</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didChangeDependencies</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">didChangeDependencies</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;page2 child didChangeDependencies......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //状态改变的时候会调用该方法,比如父类调用了setState</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> didUpdateWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Child</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> oldWidget) {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">didUpdateWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(oldWidget)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;page2 child didUpdateWidget......&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //当State对象从树中被移除时，会调用此回调</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> deactivate</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">deactivate</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;page2 child deactivate......&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //当State对象从树中被永久移除时调用；通常在此回调中释放资源</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;page2 child dispose......&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基础组件" tabindex="-1"><a class="header-anchor" href="#基础组件"><span>基础组件</span></a></h2><h3 id="文本控件" tabindex="-1"><a class="header-anchor" href="#文本控件"><span>文本控件</span></a></h3><p>Text支持两种类型的文本展示，一个是默认的展示单一样式的文本<code>Text</code>，另一个是支持多种混合样式的富文本<code>Text.rich</code>。</p><p>单一样式文本Text的初始化，是要传入需要展示的字符串。而这个字符串的具体展示效果，受构造函数中的其他参数控制。这些参数大致可以分为两类：</p><ul><li><strong>控制整体文本布局的参数</strong>，如文本对齐方式textAlign、文本排版方向textDirection，文本显示最大行数maxLines、文本截断规则overflow等等，这些都是构造函数中的参数；</li><li><strong>控制文本展示样式的参数</strong>，如字体名称fontFamily、字体大小fontSize、文本颜色color、文本阴影shadows等等，这些参数被统一封装到了构造函数中的参数style中。</li></ul><p><strong>混合展示样式与单一样式的关键区别在于分片</strong>，即如何把一段字符串分为几个片段来管理，给每个片段单独设置样式。</p><p>TextSpan定义了一个字符串片段该如何控制其展示样式，而将这些有着独立展示样式的字符串组装在一起，则可以支持混合样式的富文本展示。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> blackStyle </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(fontWeight</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FontWeight</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">normal</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> fontSize</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 20</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">black)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //黑色样式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> redStyle </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(fontWeight</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FontWeight</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">bold</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> fontSize</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 20</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //红色样式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> basicText </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;文本是视图系统中的常见控件，用来显示一段特定样式的字符串，就比如Android里的TextView，或是iOS中的UILabel。&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">textAlign</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextAlign</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">center</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//居中显示</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">style</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(fontWeight</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FontWeight</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">bold</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> fontSize</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 20</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//20号红色粗体展示</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> richText </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rich</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  TextSpan</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">TextSpan</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        TextSpan</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(text</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;文本是视图系统中常见的控件，它用来显示一段特定样式的字符串，类似&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> style</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> redStyle)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //第1个片段，红色样式</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        TextSpan</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(text</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Android&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> style</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> blackStyle)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //第1个片段，黑色样式</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        TextSpan</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(text</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;中的&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> style</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">redStyle)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //第1个片段，红色样式</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        TextSpan</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(text</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;TextView&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> style</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> blackStyle) </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//第1个片段，黑色样式</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      ])</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  textAlign</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextAlign</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">center</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="图片" tabindex="-1"><a class="header-anchor" href="#图片"><span>图片</span></a></h3><p>使用Image，可以让我们向用户展示一张图片。图片的显示方式有很多，比如资源图片、网络图片、文件图片等，图片格式也各不相同，因此在Flutter中也有多种方式，用来加载不同形式、支持不同格式的图片：</p><ul><li>加载本地资源图片，如<code>Image.asset(‘images/logo.png’)</code>；</li><li>加载本地（File文件）图片，如<code>Image.file(new File(’/storage/xxx/xxx/test.jpg’))</code>；</li><li>加载网络图片，如<code>Image.network(&#39;http://xxx/xxx/test.gif&#39;) </code>。</li></ul><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/cupertino.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Image</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> assetImage </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Image</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">asset</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;assets/cat.jpg&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">FadeInImage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> networkImage </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FadeInImage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">assetNetwork</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  placeholder</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;assets/loading.gif&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //gif占位</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  image</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;https://xxxx.com/images/banner_bg.png&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  fit</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> BoxFit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">cover</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //图片拉伸模式</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 200</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 200</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Flutter静态资源的读取需要在根目录下的<code>pubspec.yaml</code>文件下配置：</p><div class="language-yaml line-numbers-mode" data-ext="yaml" data-title="yaml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">...</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">flutter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">  ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  # To add assets to your application, add an assets section, like this:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  assets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> assets/</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h3 id="按钮" tabindex="-1"><a class="header-anchor" href="#按钮"><span>按钮</span></a></h3><p>通过按钮，我们可以响应用户的交互事件。Flutter提供了一些基本的<a href="https://m3.material.io/components/all-buttons" target="_blank" rel="noopener noreferrer">按钮控件</a>：</p><ul><li>onPressed参数用于设置点击回调，告诉Flutter在按钮被点击时通知我们。如果onPressed参数为空，则按钮会处于禁用状态，不响应用户点击。</li><li>child参数用于设置按钮的内容，告诉Flutter控件应该长成什么样，也就是控制着按钮控件的基本样式。child可以接收任意的Widget，比如我们在上面的例子中传入的Text，除此之外我们还可以传入Image等控件。</li></ul><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">FloatingActionButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> floatingActionButton </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FloatingActionButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;FloatingActionButton pressed&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Btn&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">ElevatedButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> elevatedButton </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ElevatedButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;ElevatedButton pressed&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Btn&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">FilledButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> filledButton </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FilledButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;FilledButton pressed&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Btn&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">OutlinedButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> outlinedButton </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> OutlinedButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;OutlinedButton pressed&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Btn&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">TextButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> textButton </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;TextButton pressed&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Btn&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="列表与滚动" tabindex="-1"><a class="header-anchor" href="#列表与滚动"><span>列表与滚动</span></a></h2><h3 id="listview" tabindex="-1"><a class="header-anchor" href="#listview"><span>ListView</span></a></h3><p>在Flutter中，ListView可以沿一个方向（垂直或水平方向）来排列其所有子Widget，因此常被用于需要展示一组连续视图元素的场景，比如通信录、优惠券、商家列表等。</p><p><strong>ListView提供了一个默认构造函数ListView</strong>，我们可以通过设置它的children参数，很方便地将所有的子Widget包含到ListView中。</p><p>不过，这种创建方式要求提前将所有子Widget一次性创建好，而不是等到它们真正在屏幕上需要显示时才创建，所以有一个很明显的缺点，就是性能不好。因此，<strong>这种方式仅适用于列表中含有少量元素的场景</strong>。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">ListView</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> listView </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ListView</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      IconButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () {}</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> icon</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Icon</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Icons</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">share_outlined))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">      const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ListTile</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(leading</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Icon</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Icons</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">map)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Map&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">      const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ListTile</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(leading</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Icon</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Icons</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">message)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Message&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    ]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了默认的垂直方向布局外，ListView还可以通过设置scrollDirection参数支持水平方向布局。如下所示，我定义了一组不同颜色背景的组件，将它们的宽度设置为140，并包在了水平布局的ListView中，让它们可以横向滚动：</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">ListView</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> horizontalList </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ListView</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    scrollDirection</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Axis</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">horizontal</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    itemExtent</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 140</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //item延展尺寸(宽度)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">          Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">black)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">          Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">          Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">blue)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">          Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">green)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">          Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">yellow)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">          Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">orange)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    ]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>考虑到创建子Widget产生的性能问题，更好的方法是抽象出创建子Widget的方法，交由ListView统一管理，在真正需要展示该子Widget时再去创建。</p><p><strong>ListView的另一个构造函数ListView.builder，则适用于子Widget比较多的场景</strong>。这个构造函数有两个关键参数：</p><ul><li>itemBuilder，是列表项的创建方法。当列表滚动到相应位置时，ListView会调用该方法创建对应的子Widget。</li><li>itemCount，表示列表项的数量，如果为空，则表示ListView为无限列表。</li></ul><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">ListView</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> listBuilder </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ListView</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">builder</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    itemCount</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //元素个数</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    itemExtent</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 50.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //列表项高度 这里需要注意的是，itemExtent并不是一个必填参数。但，对于定高的列表项元素，强烈建议提前设置好这个参数的值。</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    itemBuilder</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> int</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> index) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ListTile</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;title </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$index</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> subtitle</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;body </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$index</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在ListView中，有两种方式支持分割线：</p><ul><li>一种是，在itemBuilder中，根据index的值动态创建分割线，也就是将分割线视为列表项的一部分；</li><li>另一种是，使用ListView的另一个构造方法ListView.separated，单独设置分割线的样式。</li></ul><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">ListView</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> listSeparated </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ListView</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">separated</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    itemCount</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    separatorBuilder</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> int</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> index) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> index </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">%</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Divider</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">green) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Divider</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//index为偶数，创建绿色分割线；index为奇数，则创建红色分割线</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    itemBuilder</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> int</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> index) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ListTile</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;title </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$index</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> subtitle</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;body </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$index</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//创建子Widget</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ListView常见的构造方法及其适用场景</strong></p><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/00e6c9f8724fcf50757b4a76fa4c9b18.png" alt="00e6c9f8724fcf50757b4a76fa4c9b18"></p><h3 id="customscrollview" tabindex="-1"><a class="header-anchor" href="#customscrollview"><span>CustomScrollView</span></a></h3><p><strong>当多ListView嵌套时，页面滑动效果不一致时</strong>，在Flutter中有一个专门的控件CustomScrollView，用来处理多个需要自定义滚动效果的Widget。在CustomScrollView中，<strong>这些彼此独立的、可滚动的Widget被统称为Sliver</strong>。</p><p>以一个有着封面头图的列表为例，我们希望封面头图和列表这两层视图的滚动联动起来，当用户滚动列表时，头图会根据用户的滚动手势，进行缩小和展开。</p><p>经分析得出，要实现这样的需求，我们需要两个Sliver：作为头图的SliverAppBar，与作为列表的SliverList。具体的实现思路是：</p><ul><li>在创建SliverAppBar时，把flexibleSpace参数设置为悬浮头图背景。flexibleSpace可以让背景图显示在AppBar下方，高度和SliverAppBar一样；</li><li>而在创建SliverList时，通过SliverChildBuilderDelegate参数实现列表项元素的创建；</li><li>最后，将它们一并交由CustomScrollView的slivers参数统一管理。</li></ul><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">CustomScrollView</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> customScrollView </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CustomScrollView</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    slivers</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      SliverAppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//SliverAppBar作为头图控件</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;CustomScrollView Demo&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//标题</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        floating</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//设置悬浮样式</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        flexibleSpace</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Image</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">network</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;https://xxxx.com/banner_bg.png&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">fit</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BoxFit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">cover)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//设置悬浮头图背景</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        expandedHeight</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 130</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//头图控件高度</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      SliverList</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//SliverList作为列表控件</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        delegate</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SliverChildBuilderDelegate</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              (context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> index) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Item #</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$index</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//列表项创建方法</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          childCount</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//列表元素个数</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    ]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scrollcontroller" tabindex="-1"><a class="header-anchor" href="#scrollcontroller"><span>ScrollController</span></a></h3><p>在某些情况下，我们希望获取视图的滚动信息，并进行相应的控制。比如，列表是否已经滑到底（顶）了？如何快速回到列表顶部？</p><p>在Flutter中，我们可以<strong>使用ScrollController进行滚动信息的监听，以及相应的滚动控制</strong>。</p><p>ListView的组件控制器则是ScrollControler，我们可以通过它来获取视图的滚动信息，更新视图的滚动位置。</p><p>一般而言，获取视图的滚动信息往往是为了进行界面的状态控制，因此<strong>ScrollController的初始化、监听及销毁需要与StatefulWidget的状态保持同步</strong>。</p><p>如下代码所示，我们声明了一个有着100个元素的列表项，当滚动视图到特定位置后，用户可以点击按钮返回列表顶部：</p><ul><li>首先，我们在State的初始化方法里，创建了ScrollController，并通过_controller.addListener注册了滚动监听方法回调，根据当前视图的滚动位置，判断当前是否需要展示“Top”按钮。</li><li>随后，在视图构建方法build中，我们将ScrollController对象与ListView进行了关联，并且在RaisedButton中注册了对应的回调方法，可以在点击按钮时通过_controller.animateTo方法返回列表顶部。</li><li>最后，在State的销毁方法中，我们对ScrollController进行了资源释放。</li></ul><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> _ScrollControllerState</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">ScrollControllerWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  late</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ScrollController</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> _controller</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//ListView 控制器</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  bool</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> isToTop </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 标示目前是否需要启用 &quot;Top&quot; 按钮</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    _controller </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ScrollController</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    _controller</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addListener</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() {</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 为控制器注册滚动监听方法</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">      if</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(_controller</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">offset </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1000</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) {</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 如果 ListView 已经向下滚动了 1000，则启用 Top 按钮</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        setState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() {isToTop </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      } </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">else</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> if</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(_controller</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">offset </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 300</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) {</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 如果 ListView 向下滚动距离不足 300，则禁用 Top 按钮</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        setState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() {isToTop </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    })</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Scroll Controller Widget&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">          SizedBox</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 40.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FilledButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (isToTop </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">              if</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (isToTop) {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                _controller</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">animateTo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                    duration</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Duration</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(milliseconds</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 200</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                    curve</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Curves</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ease</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 做一个滚动到顶部的动画</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            } </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> null</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Top&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">          Expanded</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ListView</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">builder</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              controller</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> _controller</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 初始化传入控制器</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              itemCount</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 列表元素总数</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              itemBuilder</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> index) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">                  ListTile</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Index : </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$index</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 列表项构造方法</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        ]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    _controller</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 销毁控制器</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scrollnotification" tabindex="-1"><a class="header-anchor" href="#scrollnotification"><span>ScrollNotification</span></a></h3><p>对于列表滚动是否已经开始，或者是否已经停下来了？则需要接收ScrollNotification通知进行滚动事件的获取。</p><p>在Flutter中，<strong>ScrollNotification通知的获取是通过NotificationListener来实现的</strong>。与ScrollController不同的是，NotificationListener是一个Widget，为了监听滚动类型的事件，我们需要将NotificationListener添加为ListView的父容器，从而捕获ListView中的通知。而这些通知，需要<strong>通过onNotification回调函数实现监听逻辑</strong>：</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ScrollNotificationWidget</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ScrollNotificationWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Scroll Notification Demo&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        home</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;ScrollController Demo&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> NotificationListener</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">ScrollNotification</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt;(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 添加 NotificationListener 作为父容器</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              onNotification</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (scrollNotification) {</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 注册通知回调</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">                if</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (scrollNotification </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">is</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ScrollStartNotification</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) {</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 滚动开始</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">                  print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Scroll Start&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                } </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">else</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> if</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (scrollNotification </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">is</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ScrollUpdateNotification</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) {</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 滚动位置更新</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">                  print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Scroll Update&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                } </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">else</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> if</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (scrollNotification </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">is</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ScrollEndNotification</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) {</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 滚动结束</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">                  print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Scroll End&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                }</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">                return</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              }</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ListView</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">builder</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                itemCount</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 30</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 列表元素个数</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                itemBuilder</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> index) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ListTile</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Index : </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$index</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 列表项创建方法</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相比于ScrollController只能和具体的ListView关联后才可以监听到滚动信息；通过NotificationListener则可以监听其子Widget中的任意ListView，不仅可以得到这些ListView的当前滚动位置信息，还可以获取当前的滚动事件信息 。</p><h2 id="布局" tabindex="-1"><a class="header-anchor" href="#布局"><span>布局</span></a></h2><p>Flutter提供了31种<a href="https://flutter.dev/docs/development/ui/widgets/layout" target="_blank" rel="noopener noreferrer">布局Widget</a>，对布局控件的划分非常详细。</p><h3 id="单子widget布局" tabindex="-1"><a class="header-anchor" href="#单子widget布局"><span>单子Widget布局</span></a></h3><p>单子Widget布局类容器比较简单，一般用来对其唯一的子Widget进行样式包装，比如限制大小、添加背景色样式、内间距、旋转变换等。这一类布局Widget，包括Container、Padding与Center三种。<strong>单Widget仅能包含一个子Widget</strong>。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> container</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // return padding;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // return center;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> container </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  padding</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> EdgeInsets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">all</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">18.0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 内边距</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  margin</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> EdgeInsets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">all</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">44.0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 外边距</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 180</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 240</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  alignment</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Alignment</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">center</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 子Widget居中对齐</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  decoration</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> BoxDecoration</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">( </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//Container样式</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 背景色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    borderRadius</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> BorderRadius</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">circular</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">10.0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 圆角边框</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // child: const Text(&#39;Container（容器）在UI框架中是一个很常见的概念，Flutter也不例外。&#39;, style: TextStyle(color: Colors.black, fontSize: 20),),</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Container（容器）在UI框架中是一个很常见的概念，Flutter也不例外。&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> style</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">black</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> fontSize</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 20</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // container center组合使用</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Padding</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> padding </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Padding</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  padding</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> EdgeInsets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">all</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">44.0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Container（容器）在UI框架中是一个很常见的概念，Flutter也不例外。&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> center </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Hello&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="多子widget布局" tabindex="-1"><a class="header-anchor" href="#多子widget布局"><span>多子Widget布局</span></a></h3><p>对于拥有多个子Widget的布局类容器而言，其布局行为无非就是两种规则的抽象：水平方向上应该如何布局、垂直方向上应该如何布局。</p><p>如同Android的LinearLayout、前端的Flex布局一样，Flutter中也有类似的概念，即将子Widget按行水平排列的Row，按列垂直排列的Column，以及负责分配这些子Widget在布局方向（行/列）中剩余空间的Expanded。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // return row;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // return column;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> rowFlex</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//Row的用法示范</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Row</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> row </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Row</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">yellow</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 180</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">black</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">green</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  ]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//Column的用法示范</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> column </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">yellow</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 180</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">black</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">green</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  ]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 单纯使用Row和Column控件，在子Widget的尺寸较小时，无法将容器填满，视觉样式比较难看。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 对于这样的场景，我们可以通过Expanded控件，来制定分配规则填满容器的剩余空间。</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Row</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> rowFlex </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Row</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Expanded</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(flex</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">yellow</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //设置了flex=1，因此宽度由Expanded来分配</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 180</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">black</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Expanded</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(flex</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">green</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//设置了flex=1，因此宽度由Expanded来分配</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  ]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>于Row与Column而言，Flutter提供了依据坐标轴的布局对齐行为，即根据布局方向划分出主轴和纵轴：主轴，表示容器依次摆放子Widget的方向；纵轴，则是与主轴垂直的另一个方向。</p><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/610157c35f4457a7fffa2005ea144609.png" alt="img"></p><p>我们可以根据主轴与纵轴，设置子Widget在这两个方向上的对齐规则mainAxisAlignment与crossAxisAlignment。比如，主轴方向start表示靠左对齐、center表示横向居中对齐、end表示靠右对齐、spaceEvenly表示按固定间距对齐；而纵轴方向start则表示靠上对齐、center表示纵向居中对齐、end表示靠下对齐。</p><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/9f3a8a9e197b350f6c0aad6f5195fc87.png" alt="img"></p><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/d8fc6d0aa98be8a6b1867b24a833b89b.png" alt="img"></p><p>对于主轴而言，Flutter默认是让父容器决定其长度，即尽可能大，类似Android中的match_parent。</p><p>在上面的例子中，Row的宽度为屏幕宽度，Column的高度为屏幕高度。主轴长度大于所有子Widget的总长度，意味着容器在主轴方向的空间比子Widget要大，这也是我们能通过主轴对齐方式设置子Widget布局效果的原因。</p><p>如果想让容器与子Widget在主轴上完全匹配，我们可以通过设置Row的mainAxisSize参数为MainAxisSize.min，由所有子Widget来决定主轴方向的容器长度，即主轴方向的长度尽可能小，类似Android中的wrap_content：</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Row</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> minRow </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Row</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  mainAxisAlignment</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MainAxisAlignment</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">spaceEvenly</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //由于容器与子Widget一样宽，因此这行设置排列间距的代码并未起作用</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  mainAxisSize</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MainAxisSize</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">min</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //让容器宽度与所有子Widget的宽度一致</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">yellow</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 180</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">black</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">green</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  ]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/d8d9cc480386bd11e60da51ddc081696.png" alt="img"></p><h3 id="层叠widget布局" tabindex="-1"><a class="header-anchor" href="#层叠widget布局"><span>层叠Widget布局</span></a></h3><p>层叠布局容器Stack与前端中的绝对定位、Android中的Frame布局非常类似，子Widget之间允许叠加，还可以根据父容器上、下、左、右四个角的位置来确定自己的位置。<strong>Stack提供了层叠布局的容器，而Positioned则提供了设置子Widget位置的能力</strong>。</p><p>Stack控件允许其子Widget按照创建的先后顺序进行层叠摆放，而Positioned控件则用来控制这些子Widget的摆放位置。需要注意的是，<strong>Positioned控件只能在Stack中使用，在其他容器中使用会报错</strong>。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage2</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage2</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> stack</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Stack</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> stack </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Stack</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">yellow</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 300</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 300</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//黄色容器</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Positioned</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      left</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 18.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      top</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 18.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">green</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 50</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 50</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//叠加在黄色容器之上的绿色控件</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Positioned</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      left</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 18.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      top</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">70.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Stack提供了层叠布局的容器&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//叠加在黄色容器之上的文本</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  ]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组装组件" tabindex="-1"><a class="header-anchor" href="#组装组件"><span>组装组件</span></a></h2><p>在Flutter中，<strong>组合的思想始终贯穿在框架设计之中</strong>，这也是Flutter提供了如此丰富的控件库的原因之一。</p><p><strong>按照从上到下、从左到右去拆解UI的布局结构，把复杂的UI分解成各个小UI元素，在以组装的方式去自定义UI中非常有用</strong>。以这样的拆解方法实现如下图所示布局：</p><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/image-20241030170452558.png" alt="image-20241030170452558"></p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 先定义一个数据结构CardItemModel来存储信息。</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CardItemModel</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> appIcon</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//App图标</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> appName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//App名称</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> appSize</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//App大小</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> appDate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//App更新日期</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> appDescription</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//App更新文案</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> appVersion</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//App版本</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //构造函数语法糖，为属性赋值</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  CardItemModel</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">appIcon</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">appName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">appSize</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">appDate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">appDescription</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">appVersion</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyCardWithIcon</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  final</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CardItemModel</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> model</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //构造函数语法糖，用来给model赋值</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyCardWithIcon</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">required</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Key</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">model</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">onPressed}) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> super</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(key</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  final</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> VoidCallback</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> onPressed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//用Column将上下两部分合体</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        mainAxisSize</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MainAxisSize</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">min</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">          buildTopRow</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//上半部分</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">          buildBottomRow</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context)</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//下半部分</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        ])</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> buildTopRow</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Row</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">( </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//Row控件，用来水平摆放子Widget</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">          Padding</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//Padding控件，用来设置Image控件边距</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              padding</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> EdgeInsets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">all</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//上下左右边距均为10</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ClipRRect</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//圆角矩形裁剪控件</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  borderRadius</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> BorderRadius</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">circular</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">8.0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//圆角半径为8</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Image</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">asset</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(model</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">appIcon</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">80</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)  </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 图片控件</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">          Expanded</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//Expanded控件，用来拉伸中间区域</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//Column控件，用来垂直摆放子Widget</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              mainAxisAlignment</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MainAxisAlignment</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">center</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//垂直方向居中对齐</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              crossAxisAlignment</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CrossAxisAlignment</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//水平方向居左对齐</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">                Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(model</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">appName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">maxLines</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> style</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(fontSize</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 18</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> fontWeight</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FontWeight</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">bold)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> overflow</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextOverflow</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ellipsis</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//App名字</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">                Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(model</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">appDate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">maxLines</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> style</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">grey)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> overflow</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextOverflow</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ellipsis</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//App更新日期</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              ]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">          Padding</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//Padding控件，用来设置Widget间边距</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              padding</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> EdgeInsets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fromLTRB</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//右边距为10，其余均为0</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FilledButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//按钮控件</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> onPressed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//按钮控件</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;OPEN&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//点击回调</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        ])</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> buildBottomRow</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Padding</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//Padding控件用来设置整体边距</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        padding</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> EdgeInsets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fromLTRB</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">15</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">15</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//左边距和右边距为15</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//Column控件用来垂直摆放子Widget</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            crossAxisAlignment</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CrossAxisAlignment</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">start</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//水平方向距左对齐</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">              Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(model</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">appDescription)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//更新文案</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">              Padding</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//Padding控件用来设置边距</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  padding</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> EdgeInsets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fromLTRB</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">10</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//上边距为10</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">\${model.appVersion}</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> • </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">\${model.appSize}</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MB&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            ]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        ))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自绘" tabindex="-1"><a class="header-anchor" href="#自绘"><span>自绘</span></a></h2><p>Flutter提供了非常丰富的控件和布局方式，使得我们可以通过组合去构建一个新的视图。但对于一些不规则的视图，用SDK提供的现有Widget组合可能无法实现，比如饼图，k线图等，这个时候我们就需要自己用画笔去绘制了。</p><p><strong>在Flutter中，CustomPaint是用以承接自绘控件的容器，并不负责真正的绘制</strong>。既然是绘制，那就需要用到画布与画笔。</p><p>画布是Canvas，画笔则是Paint，而画成什么样子，则由定义了绘制逻辑的CustomPainter来控制。将CustomPainter设置给容器CustomPaint的painter属性，我们就完成了一个自绘控件的封装。</p><p>对于画笔Paint，我们可以配置它的各种属性，比如颜色、样式、粗细等；而画布Canvas，则提供了各种常见的绘制方法，比如画线drawLine、画矩形drawRect、画点DrawPoint、画路径drawPath、画圆drawCircle、画圆弧drawArc等。</p><p>这样，我们就可以在CustomPainter的paint方法里，通过Canvas与Paint的配合，实现定制化的绘制逻辑。</p><p>在下面的代码中，我们继承了CustomPainter，在定义了绘制逻辑的paint方法中，通过Canvas的drawArc方法，用6种不同颜色的画笔依次画了6个1/6圆弧，拼成了一张饼图。最后，我们使用CustomPaint容器，将painter进行封装，就完成了饼图控件Cake的定义。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;dart:math&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> WheelPainter</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CustomPainter</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 设置画笔颜色</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Paint</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> getColoredPaint</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Color</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> color) {</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//根据颜色返回不同的画笔</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Paint</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> paint </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Paint</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//生成画笔</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    paint</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">color </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//设置画笔颜色</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> paint</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> paint</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Canvas</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> canvas</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Size</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> size) {</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//绘制逻辑</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    double</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> wheelSize </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> min</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(size</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">width</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">size</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">height)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//饼图的尺寸</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    double</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> nbElem </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 6</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//分成6份</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    double</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> radius </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> pi) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> nbElem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//1/6圆</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    //包裹饼图这个圆形的矩形框</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    Rect</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> boundingRect </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Rect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fromCircle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(center</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Offset</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(wheelSize</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> wheelSize)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> radius</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> wheelSize)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 每次画1/6个圆弧</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    canvas</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">drawArc</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(boundingRect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> radius</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> getColoredPaint</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">orange))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    canvas</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">drawArc</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(boundingRect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> radius</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> radius</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> getColoredPaint</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">black38))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    canvas</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">drawArc</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(boundingRect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> radius </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> radius</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> getColoredPaint</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">green))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    canvas</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">drawArc</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(boundingRect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> radius </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> radius</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> getColoredPaint</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    canvas</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">drawArc</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(boundingRect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> radius </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> radius</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> getColoredPaint</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">blue))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    canvas</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">drawArc</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(boundingRect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> radius </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> radius</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> getColoredPaint</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pink))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 判断是否需要重绘，这里我们简单的做下比较即可</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  bool</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> shouldRepaint</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">CustomPainter</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> oldDelegate) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> oldDelegate </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!=</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//将饼图包装成一个新的控件</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Cake</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Cake</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CustomPaint</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      size</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Size</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">200</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 200</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      painter</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> WheelPainter</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>**在实现视觉需求上，自绘需要自己亲自处理绘制逻辑，而组合则是通过子Widget的拼接来实现绘制意图。**因此从渲染逻辑处理上，自绘方案可以进行深度的渲染定制，从而实现少数通过组合很难实现的需求（比如饼图、k线图）。不过，当视觉效果需要调整时，采用自绘的方案可能需要大量修改绘制代码，而组合方案则相对简单：只要布局拆分设计合理，可以通过更换子Widget类型来轻松搞定。</p><h2 id="主题定制" tabindex="-1"><a class="header-anchor" href="#主题定制"><span>主题定制</span></a></h2><p><strong>视觉效果是易变的，我们将这些变化的部分抽离出来，把提供不同视觉效果的资源和配置按照主题进行归类，整合到一个统一的中间层去管理，这样我们就能实现主题的管理和切换了。</strong></p><p><strong>Flutter由ThemeData来统一管理主题的配置信息</strong>。</p><p>ThemeData涵盖了Material Design规范的可自定义部分样式，比如应用明暗模式brightness、应用主色调primaryColor、应用次级色调accentColor、文本字体fontFamily、输入框光标颜色cursorColor等。如果你想深入了解ThemeData的其他API参数，可以参考官方文档<a href="https://api.flutter.dev/flutter/material/ThemeData/ThemeData.html" target="_blank" rel="noopener noreferrer">ThemeData</a>。</p><p>通过ThemeData来自定义应用主题，我们可以实现App全局范围，或是Widget局部范围的样式切换。</p><h3 id="全局" tabindex="-1"><a class="header-anchor" href="#全局"><span>全局</span></a></h3><p>在Flutter中，应用程序类MaterialApp的初始化方法，为我们提供了设置主题的能力。我们可以通过参数theme，选择改变App的主题色、字体等，设置界面在MaterialApp下的展示样式。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">MaterialApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Flutter Demo&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//标题</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  theme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//设置主题</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      brightness</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Brightness</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">dark</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//设置明暗模式为暗色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      accentColor</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">black</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//(按钮）Widget前景色为黑色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      primaryColor</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">cyan</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//主色调为青色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      iconTheme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">IconThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">yellow)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//设置icon主题色为黄色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      textTheme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextTheme</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(body1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red))</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//设置文本颜色为红色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  home</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Flutter Demo Home Page&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="局部" tabindex="-1"><a class="header-anchor" href="#局部"><span>局部</span></a></h3><p>在Flutter中，我们可以使用Theme来对App的主题进行局部覆盖。Theme是一个单子Widget容器，与MaterialApp类似的，我们可以通过设置其data属性，对其子Widget进行样式定制：</p><ul><li>如果我们不想继承任何App全局的颜色或字体样式，可以直接新建一个ThemeData实例，依次设置对应的样式；</li><li>而如果我们不想在局部重写所有的样式，则可以继承App的主题，使用copyWith方法，只更新部分样式。</li></ul><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 新建主题</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Theme</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    data</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(iconTheme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> IconThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Icon</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Icons</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">favorite)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 继承主题</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Theme</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    data</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Theme</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">of</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">copyWith</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(iconTheme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> IconThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">green))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Icon</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Icons</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">feedback)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>除了定义Material Design规范中那些可自定义部分样式外，主题的另一个重要用途是样式复用。</strong></p><p>比如，如果我们想为一段文字复用Materia Design规范中的title样式，或是为某个子Widget的背景色复用App的主题色，我们就可以通过Theme.of(context)方法，取出对应的属性，应用到这段文字的样式中。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Theme</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">of</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">primaryColor</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//容器背景色复用应用主题色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            &#39;Text with a background color&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            style</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Theme</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">of</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">textTheme</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">titleLarge</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//Text组件文本样式复用应用文本样式</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          ))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="分平台定制" tabindex="-1"><a class="header-anchor" href="#分平台定制"><span>分平台定制</span></a></h3><p>有时候，<strong>为了满足不同平台的用户需求，我们希望针对特定的平台设置不同的样式</strong>。比如，在iOS平台上设置浅色主题，在Android平台上设置深色主题。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // iOS浅色主题</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  final</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> kIOSTheme </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      brightness</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Brightness</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">light</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//亮色主题</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      hintColor</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">white</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//(按钮)Widget前景色为白色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      primaryColor</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">blue</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//主题色为蓝色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      iconTheme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> IconThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">grey)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//icon主题为灰色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      textTheme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextTheme</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(bodyMedium</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">black))</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//文本主题为黑色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // Android深色主题</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  final</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> kAndroidTheme </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      brightness</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Brightness</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">dark</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//深色主题</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      hintColor</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">black</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//(按钮)Widget前景色为黑色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      primaryColor</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">cyan</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//主题色Wie青色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      iconTheme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> IconThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">blue)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//icon主题色为蓝色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      textTheme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextTheme</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(bodyMedium</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red))</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//文本主题色为红色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  MaterialApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Flutter Demo&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//标题</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      theme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> defaultTargetPlatform </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TargetPlatform</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">iOS </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> kIOSTheme </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> kAndroidTheme</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//根据平台选择不同主题,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      home</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Flutter Demo Home Page&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资源管理" tabindex="-1"><a class="header-anchor" href="#资源管理"><span>资源管理</span></a></h2><p>Flutter并没有像Android那样预先定义资源的目录结构，所以我们可以把资源存放在项目中的任意目录下，只需要使用<strong>根目录下的pubspec.yaml文件</strong>，对这些资源的所在位置进行显式声明就可以了，以帮助Flutter识别出这些资源。</p><p>而在指定路径名的过程中，我们既可以对每一个文件进行挨个指定，也可以采用子目录批量指定的方式。</p><h3 id="常规资源" tabindex="-1"><a class="header-anchor" href="#常规资源"><span>常规资源</span></a></h3><p>假设我们将资源放入assets目录下，其中，两张图片<code>background.jpg</code>、<code>loading.gif</code>与JSON文件<code>result.json</code>在assets根目录，而另一张图片<code>food_icon.jpg</code>则在assets的子目录icons下。</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>assets</span></span>
<span class="line"><span>├── background.jpg</span></span>
<span class="line"><span>├── icons</span></span>
<span class="line"><span>│   └── food_icon.jpg</span></span>
<span class="line"><span>├── loading.gif</span></span>
<span class="line"><span>└── result.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yaml" data-title="yaml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">flutter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  assets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> assets/background.jpg</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   #挨个指定资源路径</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> assets/loading.gif</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  #挨个指定资源路径</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> assets/result.json</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  #挨个指定资源路径</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> assets/icons/</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    #子目录批量指定</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> assets/</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> #根目录也是可以批量指定的</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，<strong>目录批量指定并不递归，只有在该目录下的文件才可以被包括，如果下面还有子目录的话，需要单独声明子目录下的文件。</strong></p><h3 id="像素比例" tabindex="-1"><a class="header-anchor" href="#像素比例"><span>像素比例</span></a></h3><p>与Android、iOS开发类似，<strong>Flutter也遵循了基于像素密度的管理方式</strong>，如1.0x、2.0x、3.0x或其他任意倍数，Flutter可以根据当前设备分辨率加载最接近设备像素比例的图片资源。</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>assets</span></span>
<span class="line"><span>├── background.jpg    //1.0x图</span></span>
<span class="line"><span>├── 2.0x</span></span>
<span class="line"><span>│   └── background.jpg  //2.0x图</span></span>
<span class="line"><span>└── 3.0x</span></span>
<span class="line"><span>    └── background.jpg  //3.0x图</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而在pubspec.yaml文件声明这个图片资源时，仅声明1.0x图资源即可：</p><div class="language-yaml line-numbers-mode" data-ext="yaml" data-title="yaml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">flutter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  assets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> assets/background.jpg</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   #1.0x图资源</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1.0x分辨率的图片是资源标识符，而Flutter则会根据实际屏幕像素比例加载相应分辨率的图片。这时，如果主资源缺少某个分辨率资源，Flutter会在剩余的分辨率资源中选择最接近的分辨率资源去加载。</p><h3 id="字体" tabindex="-1"><a class="header-anchor" href="#字体"><span>字体</span></a></h3><p><strong>字体则是另外一类较为常用的资源</strong>。手机操作系统一般只有默认的几种字体，在大部分情况下可以满足我们的正常需求。但是，在一些特殊的情况下，我们可能需要使用自定义字体来提升视觉体验。</p><div class="language-yaml line-numbers-mode" data-ext="yaml" data-title="yaml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">fonts</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> family</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> RobotoCondensed</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  #字体名字</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    fonts</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> asset</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> assets/fonts/RobotoCondensed-Regular.ttf</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> #普通字体</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> asset</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> assets/fonts/RobotoCondensed-Italic.ttf</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        style</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> italic</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  #斜体</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> asset</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> assets/fonts/RobotoCondensed-Bold.ttf</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        weight</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 700</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  #粗体</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;This is RobotoCondensed&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> style</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    fontFamily</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;RobotoCondensed&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//普通字体</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;This is RobotoCondensed&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> style</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    fontFamily</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;RobotoCondensed&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    fontWeight</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FontWeight</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">w700</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //粗体</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;This is RobotoCondensed italic&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> style</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TextStyle</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  fontFamily</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;RobotoCondensed&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  fontStyle</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FontStyle</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">italic</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //斜体</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动图标" tabindex="-1"><a class="header-anchor" href="#启动图标"><span>启动图标</span></a></h3><p>对于Android平台，启动图标位于根目录<code>android/app/src/main/res/mipmap</code>下。我们只需要遵守对应的像素密度标准，保留原始图标名称，将图标更换为目标资源即可：</p><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/image-20241104140726643.png" alt="img"></p><p>对于iOS平台，启动图位于根目录<code>ios/Runner/Assets.xcassets/AppIcon.appiconset</code>下。同样地，我们只需要遵守对应的像素密度标准，将其替换为目标资源并保留原始图标名称即可： <img src="https://file.40017.cn/baoxian/health/health_public/images/blog/image-20241104140850081.png" alt="img"></p><h3 id="启动图" tabindex="-1"><a class="header-anchor" href="#启动图"><span>启动图</span></a></h3><p>对于Android平台，启动图位于根目录<code>android/app/src/main/res/drawable</code>下，是一个名为<code>launch_background</code>的XML界面描述文件。</p><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/image-20241104141132091.png" alt="image-20241104141132091"></p><p>更换一张居中显示的启动图片：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;?</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">xml</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> version</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">1.0</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> encoding</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">utf-8</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">?&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">layer-list</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> xmlns</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">android</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">http://schemas.android.com/apk/res/android</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    &lt;!-- 白色背景 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">item</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> android</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">drawable</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">@android:color/white</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">item</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">         &lt;!-- 内嵌一张居中展示的图片 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">bitmap</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            android</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">gravity</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">center</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">            android</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">src</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">@mipmap/bitmap_launcher</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">item</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">layer-list</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而对于iOS平台，启动图位于根目录<code>ios/Runner/Assets.xcassets/LaunchImage.imageset</code>下。我们保留原始启动图名称，将图片依次按照对应像素密度标准，更换为目标启动图即可。</p><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/image-20241104141403226.png" alt="img"></p><h2 id="包管理工具" tabindex="-1"><a class="header-anchor" href="#包管理工具"><span>包管理工具</span></a></h2><p>Dart提供了包管理工具Pub，用来管理代码和资源。从本质上说，包（package）实际上就是一个包含了pubspec.yaml文件的目录，其内部可以包含代码、资源、脚本、测试和文档等文件。包中包含了需要被外部依赖的功能抽象，也可以依赖其他包。</p><p><strong>Dart提供包管理工具Pub的真正目的是，让你能够找到真正好用的、经过线上大量验证的库，复用他人的成果来缩短开发周期，提升软件质量。</strong></p><p>在下面的例子中，我们声明了一个flutter_app_example的应用配置文件，其版本为1.0，Dart运行环境支持2.1至3.0之间，依赖flutter和cupertino_icon：</p><div class="language-yaml line-numbers-mode" data-ext="yaml" data-title="yaml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> flutter_app_example</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> #应用名称</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">description</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> A new Flutter application.</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> #应用描述</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1.0.0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#Dart运行环境区间</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">environment</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  sdk</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&gt;=2.1.0 &lt;3.0.0</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#Flutter依赖库</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">dependencies</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  flutter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    sdk</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> flutter</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  cupertino_icons</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&gt;0.1.1</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> #版本约束信息 由一组空格分隔的版本描述组成，可以支持指定版本、版本号区间，以及任意版本这三种版本约束方式</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，由于元数据与名称使用空格分隔，因此版本号中不能出现空格；同时又由于大于符号<code>&gt;</code>也是YAML语法中的折叠换行符号，因此在指定版本范围的时候，必须使用引号， 比如<code>&quot;&gt;=2.1.0 &lt; 3.0.0&quot;</code>。</p><p><strong>对于包，我们通常是指定版本区间，而很少直接指定特定版本</strong>，因为包升级变化很频繁，如果有其他的包直接或间接依赖这个包的其他版本时，就会经常发生冲突。而<strong>对于运行环境，如果是团队多人协作的工程，建议将Dart与Flutter的SDK环境写死，统一团队的开发环境</strong>，避免因为跨SDK版本出现的API差异进而导致工程问题。比如，在上面的示例中，我们可以将Dart SDK写死为2.3.0，Flutter SDK写死为1.2.1。</p><div class="language-yaml line-numbers-mode" data-ext="yaml" data-title="yaml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">environment</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  sdk</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2.3.0</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  flutter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1.2.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基于版本的方式引用第三方包，需要在其Pub上进行公开发布，我们可以访问https://pub.dev/来获取可用的第三方包。而对于不对外公开发布，或者目前处于开发调试阶段的包，我们需要设置数据源，使用本地路径或Git地址的方式进行包声明。在下面的例子中，我们分别以路径依赖以及Git依赖的方式，声明了package1和package2这两个包：</p><div class="language-yaml line-numbers-mode" data-ext="yaml" data-title="yaml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">dependencies</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  package1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    path</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ../package1/</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  #路径依赖</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  date_format</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    git</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      url</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://github.com/xxx/package2.git</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> #git依赖</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在开发应用时，我们可以不写明具体的版本号，而是以区间的方式声明包的依赖；但对于一个程序而言，其运行时具体引用哪个版本的依赖包必须要确定下来。因此，**除了管理第三方依赖，包管理工具Pub的另一个职责是，找出一组同时满足每个包版本约束的包版本。**包版本一旦确定，接下来就是下载对应版本的包了。</p><p>对于dependencies中的不同数据源，Dart会使用不同的方式进行管理，最终会将远端的包全部下载到本地。比如，对于Git声明依赖的方式，Pub会clone Git仓库；对于版本号的方式，Pub则会从pub.dartlang.org下载包。如果包还有其他的依赖包，比如package1包还依赖package3包，Pub也会一并下载。</p><p>然后，在完成了所有依赖包的下载后，<strong>Pub会在应用的根目录下创建.packages文件</strong>，将依赖的包名与系统缓存中的包文件路径进行映射，方便后续维护。</p><p>最后，<strong>Pub会自动创建pubspec.lock文件</strong>。pubspec.lock文件的作用类似iOS的Podfile.lock或前端的package-lock.json文件，用于记录当前状态下实际安装的各个直接依赖、间接依赖的包的具体来源和版本号。</p><p>比较活跃的第三方包的升级通常比较频繁，因此对于多人协作的Flutter应用来说，我们需要把pubspec.lock文件也一并提交到代码版本管理中，这样团队中的所有人在使用这个应用时安装的所有依赖都是完全一样的，以避免出现库函数找不到或者其他的依赖错误。</p><p><strong>除了提供功能和代码维度的依赖之外，包还可以提供资源的依赖</strong>。在依赖包中的pubspec.yaml文件已经声明了同样资源的情况下，为节省应用程序安装包大小，我们需要复用依赖包中的资源。在下面的例子中，我们的应用程序依赖了一个名为package4的包，而它的目录结构是这样的：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>pubspec.yaml    </span></span>
<span class="line"><span>└──assets</span></span>
<span class="line"><span>    ├──2.0x</span></span>
<span class="line"><span>    │   └── placeholder.png</span></span>
<span class="line"><span>    └──3.0x</span></span>
<span class="line"><span>        └── placeholder.png</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，placeholder.png是可复用资源。因此，在应用程序中，我们可以通过Image和AssetImage提供的package参数，根据设备实际分辨率去加载图像。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Image</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">asset</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;assets/placeholder.png&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> package</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package4&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">AssetImage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;assets/placeholder.png&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> package</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package4&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="手势交互" tabindex="-1"><a class="header-anchor" href="#手势交互"><span>手势交互</span></a></h2><p>手势操作在Flutter中分为两类：</p><ul><li>第一类是原始的指针事件（Pointer Event），即原生开发中常见的触摸事件，表示屏幕上触摸（或鼠标、手写笔）行为触发的位移行为；</li><li>第二类则是手势识别（Gesture Detector），表示多个原始指针事件的组合操作，如点击、双击、长按等，是指针事件的语义化封装。</li></ul><h3 id="指针事件" tabindex="-1"><a class="header-anchor" href="#指针事件"><span>指针事件</span></a></h3><p>指针事件表示用户交互的原始触摸数据，如手指接触屏幕PointerDownEvent、手指在屏幕上移动PointerMoveEvent、手指抬起PointerUpEvent，以及触摸取消PointerCancelEvent，这与原生系统的底层触摸事件抽象是一致的。</p><p>在手指接触屏幕，触摸事件发起时，Flutter会确定手指与屏幕发生接触的位置上究竟有哪些组件，并将触摸事件交给最内层的组件去响应。与浏览器中的事件冒泡机制类似，事件会从这个最内层的组件开始，沿着组件树向根节点向上冒泡分发。</p><p>不过Flutter无法像浏览器冒泡那样取消或者停止事件进一步分发，我们只能通过hitTestBehavior去调整组件在命中测试期内应该如何表现，比如把触摸事件交给子组件，或者交给其视图层级之下的组件去响应。</p><p>关于组件层面的原始指针事件的监听，Flutter提供了Listener Widget，可以监听其子Widget的原始指针事件。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> runApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Flutter Demo&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      home</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;event demo&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Listener</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//背景色红色</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 300</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 300</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          onPointerDown</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (event) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;down </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$event</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//手势按下回调</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          onPointerMove</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  (event) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;move </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$event</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//手势移动回调</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          onPointerUp</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  (event) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;up </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$event</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//手势抬起回调</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="手势识别" tabindex="-1"><a class="header-anchor" href="#手势识别"><span>手势识别</span></a></h3><p>使用Listener可以直接监听指针事件。不过指针事件毕竟太原始了，如果我们想要获取更多的触摸事件细节，比如判断用户是否正在拖拽控件，直接使用指针事件的话就会非常复杂。</p><p>通常情况下，响应用户交互行为的话，我们会使用封装了手势语义操作的Gesture，如点击onTap、双击onDoubleTap、长按onLongPress、拖拽onPanUpdate、缩放onScaleUpdate等。另外，Gesture可以支持同时分发多个手势交互行为，意味着我们可以通过Gesture同时监听多个事件。</p><p><strong>Gesture是手势语义的抽象，而如果我们想从组件层监听手势，则需要使用GestureDetector</strong>。GestureDetector是一个处理各种高级用户触摸行为的Widget，与Listener一样，也是一个功能性组件。</p><p>举个例子，定义了一个Stack层叠布局，使用Positioned组件将1个红色的Container放置在左上角，并同时监听点击、双击、长按和拖拽事件。在拖拽事件的回调方法中，更新Container的位置：</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> GesEvent</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatefulWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> GesEvent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  GesState</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> createState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> GesState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> GesState</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">GesEvent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //红色container坐标</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  double</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> _top </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  double</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> _left </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Stack</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//使用Stack组件去叠加视图，便于直接控制视图坐标</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        Positioned</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          top</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> _top</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          left</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> _left</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> GestureDetector</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//手势识别</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">red</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 50</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 50</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//红色子视图</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            onTap</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Tap&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//点击回调</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            onDoubleTap</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Double Tap&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//双击回调</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            onLongPress</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Long Press&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//长按回调</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            onPanUpdate</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (e) {</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//拖动回调</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">              setState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                //更新位置</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                _left </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">+=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> e</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">delta</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">dx</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                _top </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">+=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> e</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">delta</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">dy</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              })</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            }</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      ]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="手势竞技场" tabindex="-1"><a class="header-anchor" href="#手势竞技场"><span>手势竞技场</span></a></h3><p>我们对一个Widget同时监听了多个手势事件，但最终只会有一个手势能够得到本次事件的处理权。对于多个手势的识别，Flutter引入了**手势竞技场（Arena）**的概念，用来识别究竟哪个手势可以响应用户事件。手势竞技场会考虑用户触摸屏幕的时长、位移以及拖动方向，来确定最终手势。</p><p>GestureDetector内部对每一个手势都建立了一个工厂类（Gesture Factory）。而工厂类的内部会使用手势识别类（GestureRecognizer），来确定当前处理的手势。</p><p>而所有手势的工厂类都会被交给RawGestureDetector类，以完成监测手势的大量工作：使用Listener监听原始指针事件，并在状态改变时把信息同步给所有的手势识别器，然后这些手势会在竞技场决定最后由谁来响应用户事件。</p><p>手势识别发生在多个存在父子关系的视图时，手势竞技场会一并检查父视图和子视图的手势，并且通常最终会确认由子视图来响应事件。而这也是合乎常理的：从视觉效果上看，子视图的视图层级位于父视图之上，相当于对其进行了遮挡，因此从事件处理上看，子视图自然是事件响应的第一责任人。</p><p>运行这段代码，然后在蓝色区域进行点击，可以发现：尽管父容器也监听了点击事件，但Flutter只响应了子容器的点击事件。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> runApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Flutter Demo&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      home</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;event demo&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> GestureDetector</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          onTap</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Parent tapped&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//父视图的点击回调</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pinkAccent</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> GestureDetector</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                onTap</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Child tapped&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//子视图的点击回调</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">blueAccent</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 200.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 200.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了让父容器也能接收到手势，我们需要同时使用RawGestureDetector和GestureFactory，来改变竞技场决定由谁来响应用户事件的结果。</p><p>在此之前，<strong>我们还需要自定义一个手势识别器</strong>，让这个识别器在竞技场被PK失败时，能够再把自己重新添加回来，以便接下来还能继续去响应用户事件。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/gestures.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> runApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 定义了一个继承自点击手势识别器TapGestureRecognizer的类，并重写了其rejectGesture方法，手动地把事件又复活了</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MultipleTapGestureRecognizer</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> TapGestureRecognizer</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> rejectGesture</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">int</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> pointer) {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    acceptGesture</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(pointer)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Flutter Demo&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      home</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;event demo&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 接下来，我们需要将手势识别器和其工厂类传递给RawGestureDetector，以便用户产生手势交互事件时能够立刻找到对应的识别方法。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 事实上，RawGestureDetector的初始化函数所做的配置工作，就是定义不同手势识别器和其工厂类的映射关系。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 工厂类的初始化采用GestureRecognizerFactoryWithHandlers函数完成，这个函数提供了手势识别对象创建，以及对应的初始化入口。</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> RawGestureDetector</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//自己构造父Widget的手势识别映射关系</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          gestures</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">            //建立多手势识别器与手势识别工厂类的映射关系，从而返回可以响应该手势的recognizer</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">            MultipleTapGestureRecognizer</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> GestureRecognizerFactoryWithHandlers</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">                MultipleTapGestureRecognizer</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt;(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MultipleTapGestureRecognizer</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  (</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">MultipleTapGestureRecognizer</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> instance) {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                instance</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">onTap </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;parent tapped &#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//点击回调</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              }</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          }</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pinkAccent</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> GestureDetector</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//子视图可以继续使用GestureDetector</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                onTap</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Child tapped&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Container</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pinkAccent</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                      child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;子视图&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="跨组件传值" tabindex="-1"><a class="header-anchor" href="#跨组件传值"><span>跨组件传值</span></a></h2><p>总结为以下几种方式：</p><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/b2a78dbefdf30895504b2017355ae066.png" alt="b2a78dbefdf30895504b2017355ae066"></p><h3 id="inheritedwidget" tabindex="-1"><a class="header-anchor" href="#inheritedwidget"><span>InheritedWidget</span></a></h3><p>InheritedWidget是Flutter中的一个功能型Widget，适用于在Widget树中共享数据的场景。通过它，我们可以高效地将数据在Widget树中进行跨层传递。</p><p>接下来，以Flutter工程模板中的计数器为例，说明InheritedWidget的使用方法。</p><ul><li>首先，为了使用InheritedWidget，定义了一个继承自它的新类CountContainer。</li><li>然后，将计数器状态count属性放到CountContainer中，并提供了一个of方法方便其子Widget在Widget树中找到它。</li><li>最后，重写了updateShouldNotify方法，这个方法会在Flutter判断InheritedWidget是否需要重建，从而通知下层观察者组件更新数据时被调用到。在这里，直接判断count是否相等即可。</li></ul><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> runApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Flutter Demo&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      theme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        colorScheme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ColorScheme</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fromSeed</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(seedColor</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">deepPurple)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        useMaterial3</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      home</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Flutter Demo Home Page&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// InheritedWidget仅提供了数据读的能力，如果我们想要修改它的数据，则需要把它和StatefulWidget中的State配套使用。</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatefulWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">title})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  final</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> title</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">MyHomePage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">createState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePageState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CountContainer</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> InheritedWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //方便其子Widget在Widget树中找到它</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  static</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CountContainer</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> of</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dependOnInheritedWidgetOfExactType</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">CountContainer</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt;() </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CountContainer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  final</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePageState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> model</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//直接使用MyHomePage中的State获取数据</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  final</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Function</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() increment</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  final</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> int</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> count</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CountContainer</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    required</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Key</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">count</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">model</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">increment</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    required</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">child</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  })</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 判断是否需要更新</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  bool</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> updateShouldNotify</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">CountContainer</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> oldWidget) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> count </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> oldWidget</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">count</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePageState</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">MyHomePage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  int</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> count </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> _incrementCounter</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> setState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() {count</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//修改计数器</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    //将CountContainer作为根节点，并使用0作为初始化count</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CountContainer</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        model</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//将自身作为model交给CountContainer</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        increment</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> _incrementCounter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//提供修改数据的方法</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        key</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Key</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;1&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        count</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> count</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Counter</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Counter</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Counter</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    //获取InheritedWidget节点</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    CountContainer</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> state </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CountContainer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">of</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;InheritedWidget demo&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        &#39;You have pushed the button this many times: </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">\${state.count}</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      floatingActionButton</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FloatingActionButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> state</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">increment)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="notification" tabindex="-1"><a class="header-anchor" href="#notification"><span>Notification</span></a></h3><p>Notification是Flutter中进行跨层数据共享的另一个重要的机制。如果说InheritedWidget的数据流动方式是从父Widget到子Widget逐层传递，那Notificaiton则恰恰相反，数据流动方式是从子Widget向上传递至父Widget。这样的数据传递机制适用于子Widget状态变更，发送通知上报的场景。</p><p>如果想要实现自定义通知，我们首先需要继承Notification类。Notification类提供了dispatch方法，可以让我们沿着context对应的Element节点树向上逐层发送通知。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> runApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Flutter Demo&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      theme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        colorScheme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ColorScheme</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fromSeed</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(seedColor</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">deepPurple)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        useMaterial3</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      home</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Flutter Demo Home Page&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatefulWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">MyHomePage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">createState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePageState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CustomNotification</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Notification</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  CustomNotification</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">msg)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  final</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> msg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//抽离出一个子Widget用来发通知</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CustomChild</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CustomChild</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FilledButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">      //按钮点击时分发通知</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CustomNotification</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Hi&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dispatch</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Fire Notification&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 在子Widget的父Widget中，我们监听了这个通知，一旦收到通知，就会触发界面刷新，展示收到的通知信息</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyHomePageState</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">MyHomePage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> _msg </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &quot;通知：&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    //监听通知</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> NotificationListener</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">CustomNotification</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt;(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        onNotification</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (notification) {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">          setState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() {_msg </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">+=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">\${notification.msg}</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  &quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//收到子Widget通知，更新msg</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">          return</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        }</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          mainAxisAlignment</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MainAxisAlignment</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">center</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Widget</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(_msg)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CustomChild</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//将子Widget加入到视图树中</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="eventbus" tabindex="-1"><a class="header-anchor" href="#eventbus"><span>EventBus</span></a></h3><p>无论是InheritedWidget还是Notificaiton，它们的使用场景都需要依靠Widget树，也就意味着只能在有父子关系的Widget之间进行数据共享。但是，组件间数据传递还有一种常见场景：这些组件间不存在父子关系。这时，事件总线EventBus就登场了。</p><p>需要注意的是，EventBus是一个第三方插件，因此我们需要安装它：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">flutter</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pub</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> event_bus</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;dart:async&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:event_bus/event_bus.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> runApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Flutter Demo&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      theme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        colorScheme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ColorScheme</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fromSeed</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(seedColor</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">deepPurple)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        useMaterial3</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      home</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FirstPage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(key</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Key</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;1&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// EventBus的使用方式灵活，可以支持任意对象的传递。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 所以在这里，我们传输数据的载体就选择了一个有字符串属性的自定义事件类CustomEvent：</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CustomEvent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> msg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  CustomEvent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">msg)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 定义了一个全局的eventBus对象</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">EventBus</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> eventBus </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> new</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> EventBus</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FirstPage</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatefulWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FirstPage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">required</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Key</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key}) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> super</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(key</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  FirstState</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> createState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FirstState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//第一个页面</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FirstState</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">FirstPage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt;  {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> msg </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &quot;通知：&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  late</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StreamSubscription</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> subscription</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 第一个页面监听了CustomEvent事件，一旦收到事件，就会刷新UI</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    subscription </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> eventBus</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">on</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">CustomEvent</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">listen</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((event) {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">      setState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() {msg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">+=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> event</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">msg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//更新msg</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    })</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 需要注意的是，千万别忘了在State被销毁时清理掉事件注册，否则你会发现State永远被EventBus持有着，无法释放，从而造成内存泄漏</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    subscription</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cancel</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//State销毁时，清理注册</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(msg)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FilledButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Navigator</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialPageRoute</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(builder</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (context) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SecondPage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;second page&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SecondPage</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SecondPage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FilledButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">      // 以按钮点击回调的方式，触发了CustomEvent事件</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> eventBus</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fire</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">CustomEvent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;hello&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Send hello&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="路由与导航" tabindex="-1"><a class="header-anchor" href="#路由与导航"><span>路由与导航</span></a></h2><p>在Flutter中，页面之间的跳转是通过Route和Navigator来管理的：</p><ul><li>Route是页面的抽象，主要负责创建对应的界面，接收参数，响应Navigator打开和关闭；</li><li>而Navigator则会维护一个路由栈管理Route，Route打开即入栈，Route关闭即出栈，还可以直接替换栈内的某一个Route。</li></ul><p>而根据是否需要提前注册页面标识符，Flutter中的路由管理可以分为两种方式：</p><ul><li>基本路由。无需提前注册，在页面切换时需要自己构造页面实例。</li><li>命名路由。需要提前注册页面标识符，在页面切换时通过标识符直接打开新的路由。</li></ul><h3 id="基本路由" tabindex="-1"><a class="header-anchor" href="#基本路由"><span>基本路由</span></a></h3><p>在Flutter中，要导航到一个新的页面，我们需要创建一个MaterialPageRoute的实例，调用<code>Navigator.push</code>方法将新页面压到堆栈的顶部。</p><p>其中，MaterialPageRoute是一种路由模板，定义了路由创建及切换过渡动画的相关配置，可以针对不同平台，实现与平台页面切换动画风格一致的路由切换动画。</p><p>而如果我们想返回上一个页面，则需要调用<code>Navigator.pop</code>方法从堆栈中删除这个页面。</p><h3 id="命名路由" tabindex="-1"><a class="header-anchor" href="#命名路由"><span>命名路由</span></a></h3><p>基本路由使用方式相对简单灵活，适用于应用中页面不多的场景。而在应用中页面比较多的情况下，再使用基本路由方式，那么每次跳转到一个新的页面，我们都要手动创建MaterialPageRoute实例，初始化页面，然后调用push方法打开它，还是比较麻烦的。</p><p>所以，Flutter提供了另外一种方式来简化路由管理，即命名路由。我们给页面起一个名字，然后就可以直接通过页面名字打开它了。要想通过名字来指定页面切换，我们必须先给应用程序MaterialApp提供一个页面名称映射规则，即路由表routes，这样Flutter才知道名字与页面Widget的对应关系。</p><p>在注册路由表时，Flutter还提供了UnknownRoute属性，我们可以对未知的路由标识符进行统一的页面跳转处理。</p><h3 id="页面参数" tabindex="-1"><a class="header-anchor" href="#页面参数"><span>页面参数</span></a></h3><p>与基本路由能够精确地控制目标页面初始化方式不同，命名路由只能通过字符串名字来初始化固定目标页面。为了解决不同场景下目标页面的初始化需求，Flutter提供了路由参数的机制，可以在打开路由时传递相关参数，在目标页面通过RouteSettings来获取页面参数。</p><p>除了页面打开时需要传递参数，对于特定的页面，在其关闭时，也需要传递参数告知页面处理结果。</p><h3 id="路由与导航demo" tabindex="-1"><a class="header-anchor" href="#路由与导航demo"><span>路由与导航Demo</span></a></h3><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> runApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MyApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;Flutter Demo&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      theme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThemeData</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        colorScheme</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ColorScheme</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fromSeed</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(seedColor</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Colors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">deepPurple)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        useMaterial3</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">      //注册路由</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      routes</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">{</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        &quot;third_page&quot;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThirdPage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      }</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">      //错误路由处理，统一返回UnknownPage</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      onUnknownRoute</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">RouteSettings</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> setting) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialPageRoute</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(builder</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (context) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> UnknownPage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      home</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Flutter Demo Home Page&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FirstScreen</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FirstScreen</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatefulWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FirstScreen</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">FirstScreen</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">createState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FirstStage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FirstStage</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">FirstScreen</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> _msg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Message from Second screen: </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$_msg</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      Row</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        FilledButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">          // 基本路由</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Navigator</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialPageRoute</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(builder</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (context) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SecondPage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;SecondPage&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        FilledButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">          // 命名路由 路由参数</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Navigator</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pushNamed</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;third_page&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> arguments</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &quot;Hey&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">then</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((msg)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">_msg</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">msg </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;ThirdPage&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        FilledButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">          // 未知路由</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Navigator</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pushNamed</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;xxxx&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;UnknownPage&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      ])</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    ])</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SecondPage</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SecondPage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Second Page&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FilledButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 回退页面</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Navigator</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pop</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Back&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThirdPage</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ThirdPage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    //取出路由参数</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> msg </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ModalRoute</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">of</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">settings</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">arguments </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Third Page&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Column</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(children</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(msg)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        FilledButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">           // 回退参数</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Navigator</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">of</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pop</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Hi&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Back&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      ]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> UnknownPage</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> UnknownPage</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Unknown Page&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FilledButton</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        onPressed</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Navigator</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pop</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;Back&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动画" tabindex="-1"><a class="header-anchor" href="#动画"><span>动画</span></a></h2><h3 id="页面内动画" tabindex="-1"><a class="header-anchor" href="#页面内动画"><span>页面内动画</span></a></h3><p>对动画系统而言，为了实现动画，它需要做三件事儿：</p><ol><li>确定画面变化的规律；</li><li>根据这个规律，设定动画周期，启动动画；</li><li>定期获取当前动画的值，不断地微调、重绘画面。</li></ol><p>这三件事情对应到Flutter中，就是Animation、AnimationController与Listener：</p><ol><li>Animation是Flutter动画库中的核心类，会根据预定规则，在单位时间内持续输出动画的当前状态。Animation知道当前动画的状态（比如，动画是否开始、停止、前进或者后退，以及动画的当前值），但却不知道这些状态究竟应用在哪个组件对象上。换句话说，Animation仅仅是用来提供动画数据，而不负责动画的渲染。</li><li>AnimationController用于管理Animation，可以用来设置动画的时长、启动动画、暂停动画、反转动画等。</li><li>Listener是Animation的回调函数，用来监听动画的进度变化，我们需要在这个回调函数中，根据动画的当前值重新渲染组件，实现动画的渲染。</li></ol><p>下面是一个心跳动画的logo图的实现代码：</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AnimateApp</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatefulWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AnimateApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">AnimateApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">createState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> _AnimateAppState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> _AnimateAppState</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">AnimateApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">with</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SingleTickerProviderStateMixin</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  late</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AnimationController</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> controller</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  late</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Animation</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">double</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; animation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    //创建动画周期为1秒的AnimationController对象</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    controller </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AnimationController</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        vsync</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> duration</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Duration</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(milliseconds</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1000</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    //创建一条震荡曲线</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    final</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CurvedAnimation</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> curve </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> CurvedAnimation</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        parent</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> controller</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> curve</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Curves</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">elasticOut)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 创建从50到200线性变化的Animation对象</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    animation </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Tween</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(begin</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 50.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> end</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 200.0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">animate</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(curve)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      ..</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addListener</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        setState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() {})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //刷新界面</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      })</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 循环执行动画</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    animation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addStatusListener</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((status) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">      if</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (status </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AnimationStatus</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">completed) {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        controller</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">reverse</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//动画结束时反向执行</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      } </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">else</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> if</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (status </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">==</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AnimationStatus</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">dismissed) {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        controller</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">forward</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//动画反向执行完毕时，重新执行</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    })</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    controller</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">forward</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //启动动画</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> MaterialApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        home</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SizedBox</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> animation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 将动画的值赋给widget的宽高</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> animation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FlutterLogo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            )))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    controller</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 释放资源</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dispose</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在为Widget添加动画效果的过程中我们不难发现，Animation仅提供动画的数据，因此我们还需要监听动画执行进度，并在回调中使用setState强制刷新界面才能看到动画效果。考虑到这些步骤都是固定的，Flutter提供了两个类来帮我们简化这一步骤，即AnimatedWidget与AnimatedBuilder。</p><p>在构建Widget时，AnimatedWidget会将Animation的状态与其子Widget的视觉样式绑定。要使用AnimatedWidget，我们需要一个继承自它的新类，并接收Animation对象作为其初始化参数。然后，在build方法中，读取出Animation对象的当前值，用作初始化Widget的样式。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">...</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> _AnimateAppState</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">AnimateApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">with</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SingleTickerProviderStateMixin</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ...</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> initState</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    ...</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    animation </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Tween</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(begin</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 50.0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> end</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 200.0</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">animate</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(curve)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">      // ..addListener(() {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">      //   setState(() {}); //刷新界面</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">      // });</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 如果使用AnimatedWidget就可以省去上面的代码</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">		...</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AnimatedLogo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(key</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Key</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;1&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> animation</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> animation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	...</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AnimatedLogo</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AnimatedWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //AnimatedWidget需要在初始化时传入animation对象</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AnimatedLogo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">required</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Key</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> required</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Animation</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">double</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; animation})</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">      :</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> super</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(key</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> listenable</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> animation)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    //取出动画对象</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    final</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Animation</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">double</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; animation </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> listenable </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Animation</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">double</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SizedBox</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> animation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//根据动画对象的当前状态更新宽高</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> animation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FlutterLogo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        ))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>针对简单动画可以使用上面的方式实现，如果动画的组件比较复杂，一个更好的解决方案是，<strong>将动画和渲染职责分离</strong>。</p><p>与AnimatedWidget类似，AnimatedBuilder也会自动监听Animation对象的变化，并根据需要将该控件树标记为dirty以自动刷新UI。事实上，如果你翻看<a href="https://github.com/flutter/flutter/blob/ca5411e3aa99d571ddd80b75b814718c4a94c839/packages/flutter/lib/src/widgets/transitions.dart#L920" target="_blank" rel="noopener noreferrer">源码</a>，就会发现AnimatedBuilder其实也是继承自AnimatedWidget。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">...</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> _AnimateAppState</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> State</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">AnimateApp</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">with</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SingleTickerProviderStateMixin</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ...</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AnimatedBuilder</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          animation</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> animation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//传入动画对象</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FlutterLogo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">          //动画构建回调</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          builder</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SizedBox</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> animation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//使用动画的当前状态更新UI</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> animation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> child</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> //child参数即FlutterLogo()</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">      )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">	...</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，通过使用AnimatedWidget和AnimatedBuilder，动画的生成和最终的渲染被分离开了，构建动画的工作也被大大简化了。</p><h3 id="跨页面动画" tabindex="-1"><a class="header-anchor" href="#跨页面动画"><span>跨页面动画</span></a></h3><p>跨页面共享的控件动画效果有一个专门的名词，即“共享元素变换”（Shared Element Transition）。Flutter也有类似的概念，即Hero控件。<strong>通过Hero，我们可以在两个页面的共享元素之间，做出流畅的页面切换效果。</strong></p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;package:flutter/material.dart&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Page1</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Page1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> GestureDetector</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//手势监听点击</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Hero</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              tag</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;hero&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//设置共享tag</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SizedBox</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 100</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FlutterLogo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          onTap</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">            Navigator</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">of</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(context)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">MaterialPageRoute</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(builder</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (_)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Page2</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//点击后打开第二个页面</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          }</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Page2</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> StatelessWidget</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Page2</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">({</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key})</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  @override</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Widget</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> build</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">BuildContext</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> context) {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Scaffold</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        appBar</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> AppBar</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Text</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;Page2&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        body</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> const</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Hero</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          tag</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;hero&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//设置共享tag</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">          child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Center</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> SizedBox</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  width</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 300</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> height</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 300</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">                  child</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> FlutterLogo</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">              ))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        )</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="事件循环与异步" tabindex="-1"><a class="header-anchor" href="#事件循环与异步"><span>事件循环与异步</span></a></h2><p>**Dart是单线程的，但是单线程和异步并不冲突。**等待这个行为是通过Event Loop驱动的。事件队列Event Queue会把其他平行世界（比如Socket）完成的，需要主线程响应的事件放入其中。像其他语言一样，Dart也有一个巨大的事件循环，在不断的轮询事件队列，取出事件（比如，键盘事件、I\\O事件、网络事件等），在主线程同步执行其回调函数。</p><p>在Dart中，实际上有两个队列，一个事件队列（Event Queue），另一个则是微任务队列（Microtask Queue）。在每一次事件循环中，Dart总是先去第一个微任务队列中查询是否有可执行的任务，如果没有，才会处理后续的事件队列的流程。</p><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/70dc4e1c222ddfaee8aa06df85c22bbc.png" alt="img"></p><p><strong>Dart为Event Queue的任务建立提供了一层封装，叫作Future</strong>。从名字上也很容易理解，它表示一个在未来时间才会完成的任务。</p><p>把一个函数体放入Future，就完成了从同步任务到异步任务的包装。Future还提供了链式调用的能力，可以在异步任务执行完毕后依次执行链路上的其他函数体。</p><p>微任务是由scheduleMicroTask建立的。如下所示，这段代码会在下一个事件循环中输出一段字符串：</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">scheduleMicrotask</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;This is a microtask&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>不过，一般的异步任务通常也很少必须要在事件队列前完成，所以也不需要太高的优先级，因此我们通常很少会直接用到微任务队列，就连Flutter内部，也只有7处用到了而已（比如，手势识别、文本输入、滚动视图、保存页面效果等需要高优执行任务的场景）。</p><p><strong>Dart为Event Queue的任务建立提供了一层封装，叫作Future</strong>。从名字上也很容易理解，它表示一个在未来时间才会完成的任务。</p><p>把一个函数体放入Future，就完成了从同步任务到异步任务的包装。Future还提供了链式调用的能力，可以在异步任务执行完毕后依次执行链路上的其他函数体。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 由于f1比f2先声明，因此会被先加入事件队列，所以f1比f2先执行；</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f1&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f2&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 由于Future函数体与then共用一个事件循环，因此f3执行后会立刻同步执行then 3；</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f3&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">then</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((_) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;then 3&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// Future函数体是null，这意味着它不需要也没有事件循环，因此后续的then也无法与它共享。在这种场景下，Dart会把后续的then放入微任务队列，在下一次事件循环中执行。</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> null</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">then</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((_) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;then 4&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看个综合的例子：</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &#39;dart:async&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f1&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//声明一个匿名Future</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> fx </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  null</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//声明Future fx，其执行体为null</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //声明一个匿名Future，并注册了两个then。在第一个then回调里启动了一个微任务</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f2&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">then</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((_) {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f3&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    scheduleMicrotask</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f4&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  })</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">then</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((_) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f5&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //声明了一个匿名Future，并注册了两个then。第一个then是一个Future</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f6&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">then</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((_) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f7&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)))</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">then</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((_) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f8&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //声明了一个匿名Future</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f9&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //往执行体为null的fx注册了了一个then</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  fx</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">then</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((_) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f10&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  //启动一个微任务</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  scheduleMicrotask</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f11&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">))</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&#39;f12&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// f12 f11 f1 f10 f2 f3 f5 f4 f6 f9 f7 f8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>因为其他语句都是异步任务，所以先打印<code>f12</code>。</li><li>剩下的异步任务中，微任务队列优先级最高，因此随后打印<code>f11</code>；然后按照Future声明的先后顺序，打印<code>f1</code>。</li><li>随后到了fx，由于fx的执行体是null，相当于执行完毕了，Dart将fx的then放入微任务队列，由于微任务队列的优先级最高，因此fx的then还是会最先执行，打印<code>f10</code>。</li><li>然后到了fx下面的f2，打印<code>f2</code>，然后执行then，打印<code>f3</code>。f4是一个微任务，要到下一个事件循环才执行，因此后续的then继续同步执行，打印<code>f5</code>。本次事件循环结束，下一个事件循环取出f4这个微任务，打印<code>f4</code>。</li><li>然后到了f2下面的f6，打印<code>f6</code>，然后执行then。这里需要注意的是，这个then是一个Future异步任务，因此这个then，以及后续的then都被放入到事件队列中了。</li><li>f6下面还有f9，打印<code>f9</code>。</li><li>最后一个事件循环，打印<code>f7</code>，以及后续的<code>f8</code>。</li></ul><p>总结一点，<strong>then会在Future函数体执行完毕后立刻执行，无论是共用同一个事件循环还是进入下一个微任务。</strong></p><h3 id="异步函数" tabindex="-1"><a class="header-anchor" href="#异步函数"><span>异步函数</span></a></h3><p>对于一个异步函数来说，其返回时内部执行动作并未结束，因此需要返回一个Future对象，供调用者使用。调用者根据Future对象，来决定：是在这个Future对象上注册一个then，等Future的执行体结束了以后再进行异步处理；还是一直同步等待Future执行体结束。</p><p>对于异步函数返回的Future对象，如果调用者决定同步等待，则需要在调用处使用await关键字，并且在调用处的函数体使用async关键字。</p><p><strong>Dart中的await并不是阻塞等待，而是异步等待</strong>。Dart会将调用体的函数也视作异步函数，将等待语句的上下文放入Event Queue中，一旦有了结果，Event Loop就会把它从Event Queue中取出，等待代码继续执行。</p><div class="language-dart line-numbers-mode" data-ext="dart" data-title="dart"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//声明了一个延迟2秒返回Hello的Future，并注册了一个then返回拼接后的Hello 2024</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt; </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fetchContent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  Future</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&lt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">String</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">delayed</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Duration</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(seconds</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> () </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &quot;Hello&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">then</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">((x) </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$x</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 2024&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//异步函数会同步等待Hello 2024的返回，并打印</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">func</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">async</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">await</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> fetchContent</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">())</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">main</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;func before&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  func</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  print</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&quot;func after&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// func before  func after  Hello 2024</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>await与async只对调用上下文的函数有效，并不向上传递。因此对于这个案例而言，func是在异步等待。如果我们想在main函数中也同步等待，需要在调用异步函数时也加上await，在main函数也加上async。</p>`,337)]))}const e=i(h,[["render",k],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/article/l8os2vws/","title":"Flutter学习笔记","lang":"zh-CN","frontmatter":{"title":"Flutter学习笔记","tags":["笔记","学习","flutter","待续"],"createTime":"2024/10/25 14:38:26","permalink":"/article/l8os2vws/","description":"Dart语言基础 类型变量 在Dart中，所有类型都是对象类型，都继承自顶层类型Object，因此一切变量都是对象，数字、布尔值、函数和null也概莫能外； 未初始化变量的值都是null； 为变量指定类型，这样编辑器和编译器都能更好地理解你的意图。 函数 Dart认为重载会导致混乱，因此从设计之初就不支持重载，而是提供了可选命名参数和可选参数。 具体方...","head":[["meta",{"property":"og:url","content":"https://jyqwq.github.io/rainbow/article/l8os2vws/"}],["meta",{"property":"og:site_name","content":"纸上的彩虹"}],["meta",{"property":"og:title","content":"Flutter学习笔记"}],["meta",{"property":"og:description","content":"Dart语言基础 类型变量 在Dart中，所有类型都是对象类型，都继承自顶层类型Object，因此一切变量都是对象，数字、布尔值、函数和null也概莫能外； 未初始化变量的值都是null； 为变量指定类型，这样编辑器和编译器都能更好地理解你的意图。 函数 Dart认为重载会导致混乱，因此从设计之初就不支持重载，而是提供了可选命名参数和可选参数。 具体方..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://file.40017.cn/baoxian/health/health_public/images/blog/bba88ebb44b7fdd6735f3ddb41106784.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"笔记"}],["meta",{"property":"article:tag","content":"学习"}],["meta",{"property":"article:tag","content":"flutter"}],["meta",{"property":"article:tag","content":"待续"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Flutter学习笔记\\",\\"image\\":[\\"https://file.40017.cn/baoxian/health/health_public/images/blog/bba88ebb44b7fdd6735f3ddb41106784.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/aacfcfdb80038874251aa8ad93930abc.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/2880ffdbe3c5df3552c0b22c34157ae6.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/00e6c9f8724fcf50757b4a76fa4c9b18.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/610157c35f4457a7fffa2005ea144609.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/9f3a8a9e197b350f6c0aad6f5195fc87.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/d8fc6d0aa98be8a6b1867b24a833b89b.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/d8d9cc480386bd11e60da51ddc081696.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/image-20241030170452558.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/image-20241104140726643.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/image-20241104140850081.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/image-20241104141132091.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/image-20241104141403226.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/b2a78dbefdf30895504b2017355ae066.png\\",\\"https://file.40017.cn/baoxian/health/health_public/images/blog/70dc4e1c222ddfaee8aa06df85c22bbc.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":67.97,"words":20391},"git":{},"autoDesc":true,"filePathRelative":"日常学习/Flutter.md","categoryList":[{"id":"9a91b4","sort":10001,"name":"日常学习"}],"bulletin":false}');export{e as comp,d as data};
