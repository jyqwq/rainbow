import{_ as t,c as a,f as i,o}from"./app-LYC0rH-0.js";const l={};function p(r,e){return o(),a("div",null,e[0]||(e[0]=[i('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><h3 id="与浏览器的区别" tabindex="-1"><a class="header-anchor" href="#与浏览器的区别"><span>与浏览器的区别</span></a></h3><p>除了<code>HTML</code>、<code>WebKit</code>和显卡这些UI相关技术没有支持外，Node的结构与Chrome十分相似。它们都是基于事件驱动的异步架构，浏览器通过事件驱动来服务界面上的交互，Node通过事件驱动来服务I/O。</p><p>在Node中，JavaScript可以随心所欲地访问本地文件，可以搭建<code>WebSocket</code>服务器端，可以连接数据库，可以如<code>WebWorkers</code>一样玩转多进程。</p><p>如今，JavaScript可以运行在不同的地方，不再继续限制在浏览器中与CSS样式表、DOM树打交道。如果HTTP协议栈是水平面，Node就是浏览器在协议栈另一边的倒影。Node不处理UI，但用与浏览器相同的机制和原理运行。Node打波了JavaScript过去只能在浏览器中运行的局面。</p><p>前后端编程环境统一，可以大大降低前后端转换所需要的上下文交换代价。对于前端工程师而言，自己所熟悉的JavaScript如今竟然可以在另一个地方放出异彩，不谈其他原因，仅仅因为好奇，就值得去关注和探究它。</p><p><img src="https://file.40017.cn/baoxian/health/health_public/images/blog/image-fail.png" alt="image-20211014102251611"></p><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h3><ul><li><p>异步I/O</p></li><li><p>事件与回调函数</p></li><li><p>单线程</p><p>单线程的好处在于不用像多线程编程那样处处在意状态的同步问题，这里没有锁死的存在，也没有线程上下文交换所带来的性能上的开销。</p><p>单线程弱点也有以下几点：</p><ul><li>无法利用多核CPU</li><li>错误会引起整个应用退出，应用的健壮性值得考验</li><li>大量计算占用CPU导致无法继续调用异步I/O</li></ul><p>后来，HTML5制定了Web Workers的标准，它能够创建工作线程来进行计算，以解决JS大计算阻塞UI渲染的问题。Node采用了Web Workers相同的思路来解决单线程中大量计算的问题：child_process。</p><p>子进程的出现，意味着Node可以从容地应对单线程在健壮性和无法利用多核CPU方面的问题。</p></li><li><p>跨平台</p></li></ul><h3 id="使用者" tabindex="-1"><a class="header-anchor" href="#使用者"><span>使用者</span></a></h3><ul><li>前后端编程语言环境统一</li><li>Node带来的高性能I/O用于实时应用</li><li>并行I/O使得使用者可以更高效地利用分布式环境</li><li>并行I/O有效利用稳定接口提升Web渲染能力</li><li>云计算平台提供Node支持</li><li>游戏开发领域</li><li>工具类应用</li></ul>',11)]))}const c=t(l,[["render",p],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/article/3pjxnjtq/","title":"Node","lang":"zh-CN","frontmatter":{"title":"Node","tags":["笔记","学习","待续"],"createTime":"2021/10/16","permalink":"/article/3pjxnjtq/","description":"简介 与浏览器的区别 除了HTML、WebKit和显卡这些UI相关技术没有支持外，Node的结构与Chrome十分相似。它们都是基于事件驱动的异步架构，浏览器通过事件驱动来服务界面上的交互，Node通过事件驱动来服务I/O。 在Node中，JavaScript可以随心所欲地访问本地文件，可以搭建WebSocket服务器端，可以连接数据库，可以如WebW...","head":[["meta",{"property":"og:url","content":"https://jyqwq.github.io/rainbow/article/3pjxnjtq/"}],["meta",{"property":"og:site_name","content":"纸上的彩虹"}],["meta",{"property":"og:title","content":"Node"}],["meta",{"property":"og:description","content":"简介 与浏览器的区别 除了HTML、WebKit和显卡这些UI相关技术没有支持外，Node的结构与Chrome十分相似。它们都是基于事件驱动的异步架构，浏览器通过事件驱动来服务界面上的交互，Node通过事件驱动来服务I/O。 在Node中，JavaScript可以随心所欲地访问本地文件，可以搭建WebSocket服务器端，可以连接数据库，可以如WebW..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://file.40017.cn/baoxian/health/health_public/images/blog/image-fail.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"笔记"}],["meta",{"property":"article:tag","content":"学习"}],["meta",{"property":"article:tag","content":"待续"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Node\\",\\"image\\":[\\"https://file.40017.cn/baoxian/health/health_public/images/blog/image-fail.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":2.18,"words":654},"git":{},"autoDesc":true,"filePathRelative":"日常学习/Node.md","categoryList":[{"id":"9a91b4","sort":10001,"name":"日常学习"}],"bulletin":false}');export{c as comp,d as data};
